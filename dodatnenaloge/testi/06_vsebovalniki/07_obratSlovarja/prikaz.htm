<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" 
          "http://www.w3.org/TR/html4/strict.dtd">
<html>
    <head>
        <title>Prikaz rezultatov testiranja</title>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
        <style>
            .tableBase { border-collapse: collapse; }
            .tableBase > tbody > tr > td { border: 1px solid black; padding: 7px;}
            .tableResults { table-layout: fixed; border-spacing: 0px; border-collapse: separate; }
            table#nasredini { margin-left:auto; margin-right:auto; }
            table tbody td.hoverOk {background-color:#9F9; border: 1px solid #63B563; width: 15px; color: black; text-align: center; }
            .hoverOk:hover { background-color: #FAFAF0; !important; color: #000; border: 1px solid #63B563; }
            .hoverOk:hover td { background: transparent; }
            .hoverOk > a:link, .hoverOk > a:visited, .hoverOk > a:hover, .hoverOk > a:active { color: black; font-size: 0.9em; }
            table tbody td.hoverErr {background-color:#FFBF00; border: 1px solid #CB9800; width: 15px; color: black; text-align: center; }
            .hoverErr:hover { background-color: #FAFAF0; !important; color: #000; border: 1px solid #CB9800; }
            .hoverErr:hover td { background: transparent; }
            .hoverErr > a:link, .hoverErr > a:visited, .hoverErr > a:hover, .hoverErr > a:active { color: black; font-size: 0.9em; }
            table tbody td.hoverRuntime {background-color:#FF9; border: 1px solid #D8D87E; width: 15px; color: black; text-align: center; }
            .hoverRuntime:hover { background-color: #FAFAF0; !important; color: #000; border: 1px solid #D8D87E; }
            .hoverRuntime:hover td { background: transparent; }
            .hoverRuntime > a:link, .hoverRuntime > a:visited, .hoverRuntime > a:hover, .hoverRuntime > a:active { color: black; font-size: 0.9em; }
            table tbody td.hoverCompile {background-color:#C00000; border: 1px solid #710B0B; width: 15px; color: black; text-align: center; }
            .hoverCompile:hover { background-color: #FAFAF0; !important; color: #000; border: 1px solid #710B0B; }
            .hoverCompile:hover td { background: transparent; }
            .hoverCompile > a:link, .hoverCompile > a:visited, .hoverCompile > a:hover, .hoverCompile > a:active { color: black; font-size: 0.9em; }
            table tbody td.hoverMissing {background-color:#F0F0F0; border: 1px solid #ABABAB; width: 15px; color: black; text-align: center; }
            .hoverMissing:hover { background-color: #FAFAF0; !important; color: #000; border: 1px solid #ABABAB; }
            .hoverMissing:hover td { background: transparent; }
            .hoverMissing > a:link, .hoverMissing > a:visited, .hoverMissing > a:hover, .hoverMissing > a:active { color: black; font-size: 0.9em; }
            table tbody td.hoverTimeout {background-color:#B9F; border: 1px solid #9070CE; width: 15px; color: black; text-align: center; }
            .hoverTimeout:hover { background-color: #FAFAF0; !important; color: #000; border: 1px solid #9070CE; }
            .hoverTimeout:hover td { background: transparent; }
            .hoverTimeout > a:link, .hoverTimeout > a:visited, .hoverTimeout > a:hover, .hoverTimeout > a:active { color: black; font-size: 0.9em; }
            table tbody td.hoverImage {background-color:#D0E0F0; border: 1px solid #a6b3c0; width: 15px; color: black; text-align: center; }
            .hoverImage:hover { background-color: #FAFAF0; !important; color: #000; border: 1px solid #a6b3c0; }
            .hoverImage:hover td { background: transparent; }
            .hoverImage > a:link, .hoverImage > a:visited, .hoverImage > a:hover, .hoverImage > a:active { color: black; font-size: 0.9em; }
            .tableCommon { border-collapse: collapse; }
            .tableOK > tbody > tr > td { border: 1px solid #63B563; padding: 7px;}
            .tableError > tbody > tr > td { border: 1px solid #CB9800; padding: 7px;}
            .tableRuntime > tbody > tr > td { border: 1px solid #D8D87E; padding: 7px;}
            .tableCompiler > tbody > tr > td { border: 1px solid #710B0B; padding: 7px;}
            .tableMissing > tbody > tr > td { border: 1px solid #ABABAB; padding: 7px;}
            .tableTimeout > tbody > tr > td { border: 1px solid #9070CE; padding: 7px;}
            .tableImage > tbody > tr > td { border: 1px solid #a6b3c0; padding: 7px;}
            .tableSummary { table-layout: fixed; }
            .texttt { font-family: DejaVu Sans Mono, monospace; font-size: 0.8em; }
            table.diff > tbody > tr > td { border: none; font-family: DejaVu Sans Mono, monospace}
            .diff_add { color: green; font-family: DejaVu Sans Mono, monospace; }
            .diff_sub { color: blue; font-family: DejaVu Sans Mono, monospace; }
            .diff_chg { color: red; font-family: DejaVu Sans Mono, monospace; }
            a { color: blue; text-decoration: none; height: 100%; width: 100%; vertical-align: middle; }
            a:link { color: blue; text-decoration: none; }
            a:link { color: blue; text-decoration: none; }
            a:hover { color: blue; text-decoration: underline; }
            body, td { font: normal normal 100%/1.0 DejaVu Sans, sans-serif; }
            h1 { font-weight: bold; font-size: 150%; }
            h2 { font-weight: normal; font-size: 125%; border-top: 1px solid black; border-bottom: 1px solid black; background: #DEF; padding: 5px; margin-top: 36px; margin-bottom: 36px}
            .container{ margin: 0px auto; width: 70%; min-width: 700px; margin-top: 1.8cm; margin-bottom: 1.8cm; }
            .rwordb{ color: blue; font-weight: bold; }
            .rwordv{ color:#8000ff; font-weight: bold; }
            .vcomment{ color: green; }
            .bcomment{ color: green; }
            .niz{ color:#a31515; }
            .stevilo{ color:#ff8000; }
            tab { padding-left: 4em; }
            #grad1 {
                background: -webkit-linear-gradient(left, #E0E0E0 , white);
                background: -o-linear-gradient(right, #E0E0E0, white);
                background: -moz-linear-gradient(right, #E0E0E0, white);
                background: linear-gradient(to right, #E0E0E0 , white);
            }
            #grad2 {
                background: -webkit-linear-gradient(left, #9F9 , white);
                background: -o-linear-gradient(right, #9F9, white);
                background: -moz-linear-gradient(right, #9F9, white);
                background: linear-gradient(to right, #9F9 , white);
            }
            .capSlika { display:block; height: 25px; margin:0 auto; font-size: 1.0em; text-align: left; }
            .dborder { padding: 0px; border: 1px solid #CACACA; }
            .capText { display: block; margin:0 auto; font-size: 0.9em; text-align: left; }
        </style>
    </head>
    <body>
        <div class="container">
        <a name="top"></a>
        <h1 id="grad2" style="padding: 10px; border: 0px solid black; color: #000000;">Rezultati preverjanja metod programa (4/4)</h1>
        <div style="height: 20px"></div>
        <a name="summary"></a>
        <h2>Povzetek rezultatov</h2>
        <table id="nasredini" class="tableBase tableResults">
            <tbody>
                <tr>
                <td class="hoverOk"><a href="#testcase1">1</a></td>
                <td class="hoverOk"><a href="#testcase2">2</a></td>
                <td class="hoverOk"><a href="#testcase3">3</a></td>
                <td class="hoverOk"><a href="#testcase4">4</a></td>
                </tr>
                <tr></tr>
            </tbody>
        </table>
        <div style="height: 20px"></div>
        <h2>Rezultati</h2>
        <a name="testcase1"></a>
        <div style="border: 1px solid #63B563">
            <table class="tableOK tableCommon" style="width: 100%; border: 3px solid #9F9;">
                <tbody>
                    <tr>
                        <td colspan="2" style="background-color: #9F9; color: black;">Testni primer 1</td>
                    </tr>
                    <tr>
                        <td style="width: 200px;">Vhod</td>
                        <td class="texttt">
                            <br/>
<span class="rwordb">import</span> java.util.*;<br/>
<br/>
<span class="rwordv">public</span> <span class="rwordv">class</span> Test01 {<br/>
<br/>
<tab><span class="rwordv">public</span> <span class="rwordv">static</span> <span class="rwordv">void</span> main(String[] args) {<br/>
<tab><tab>Map<String, Integer> slovar = Map.of(<br/>
<tab><tab><tab><span class="niz">"Slovenija"</span>, <span class="stevilo">4</span>,<br/>
<tab><tab><tab><span class="niz">"Avstrija"</span>, <span class="stevilo">8</span>,<br/>
<tab><tab><tab><span class="niz">"Italija"</span>, <span class="stevilo">6</span>,<br/>
<tab><tab><tab><span class="niz">"Hrvaska"</span>, <span class="stevilo">5</span>,<br/>
<tab><tab><tab><span class="niz">"Ceska"</span>, <span class="stevilo">4</span>,<br/>
<tab><tab><tab><span class="niz">"Slovaska"</span>, <span class="stevilo">5</span>,<br/>
<tab><tab><tab><span class="niz">"Srbija"</span>, <span class="stevilo">8</span>,<br/>
<tab><tab><tab><span class="niz">"Belgija"</span>, <span class="stevilo">4</span><br/>
<tab><tab>);<br/>
<tab><tab>Map<Integer, Set<String>> obrat = ObratSlovarja.obrni(slovar);<br/>
<tab><tab>izpisi(obrat);<br/>
<tab>}<br/>
<br/>
<tab><span class="rwordv">private</span> <span class="rwordv">static</span> <V, K> <span class="rwordv">void</span> izpisi(Map<V, Set<K>> slovar) {<br/>
<tab><tab>Map<V, Set<K>> novi = <span class="rwordb">new</span> TreeMap<>(slovar);<br/>
<tab><tab><span class="rwordb">for</span> (V v: novi.keySet()) {<br/>
<tab><tab><tab>novi.put(v, <span class="rwordb">new</span> TreeSet<>(slovar.get(v)));<br/>
<tab><tab>}<br/>
<tab><tab><span class="rwordb">for</span> (V v: novi.keySet()) {<br/>
<tab><tab><tab>System.out.printf(<span class="niz">"%s -> %s%n"</span>, v, novi.get(v));<br/>
<tab><tab>}<br/>
<tab>}<br/>
}<br/>


<br/>
                        </td>
                    </tr>
                    <tr>
                        <td>Izhod programa</td>
                        <td class="texttt">
                            4&nbsp;->&nbsp;[Belgija,&nbsp;Ceska,&nbsp;Slovenija]<br/>5&nbsp;->&nbsp;[Hrvaska,&nbsp;Slovaska]<br/>6&nbsp;->&nbsp;[Italija]<br/>8&nbsp;->&nbsp;[Avstrija,&nbsp;Srbija]<br/><br/>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div style="height: 15px"></div>
<div style="font-size: 0.8em;">[ <a href="#top">&uparrow;</a> | <a href="#bottom">&downarrow;</a> | 
<a href="#summary">Povzetek</a> | 
<a href="#testcase1">Rezultati</a> ]</div><div style="height: 30px"></div>
        <a name="testcase2"></a>
        <div style="border: 1px solid #63B563">
            <table class="tableOK tableCommon" style="width: 100%; border: 3px solid #9F9;">
                <tbody>
                    <tr>
                        <td colspan="2" style="background-color: #9F9; color: black;">Testni primer 2</td>
                    </tr>
                    <tr>
                        <td style="width: 200px;">Vhod</td>
                        <td class="texttt">
                            <br/>
<span class="rwordb">import</span> java.util.*;<br/>
<br/>
<span class="rwordv">public</span> <span class="rwordv">class</span> Test02 {<br/>
<br/>
<tab><span class="rwordv">public</span> <span class="rwordv">static</span> <span class="rwordv">void</span> main(String[] args) {<br/>
<tab><tab>Map<Integer, Integer> slovar = Map.ofEntries(<br/>
<tab><tab><tab><tab>Map.en<span class="rwordb">try</span>(<span class="stevilo">42</span>, <span class="stevilo">2</span>),<br/>
<tab><tab><tab><tab>Map.en<span class="rwordb">try</span>(<span class="stevilo">35</span>, <span class="stevilo">2</span>),<br/>
<tab><tab><tab><tab>Map.en<span class="rwordb">try</span>(<span class="stevilo">782</span>, <span class="stevilo">3</span>),<br/>
<tab><tab><tab><tab>Map.en<span class="rwordb">try</span>(<span class="stevilo">8</span>, <span class="stevilo">1</span>),<br/>
<tab><tab><tab><tab>Map.en<span class="rwordb">try</span>(<span class="stevilo">10</span>, <span class="stevilo">2</span>),<br/>
<tab><tab><tab><tab>Map.en<span class="rwordb">try</span>(<span class="stevilo">651</span>, <span class="stevilo">3</span>),<br/>
<tab><tab><tab><tab>Map.en<span class="rwordb">try</span>(<span class="stevilo">6</span>, <span class="stevilo">1</span>),<br/>
<tab><tab><tab><tab>Map.en<span class="rwordb">try</span>(<span class="stevilo">8712</span>, <span class="stevilo">4</span>),<br/>
<tab><tab><tab><tab>Map.en<span class="rwordb">try</span>(<span class="stevilo">3421</span>, <span class="stevilo">4</span>),<br/>
<tab><tab><tab><tab>Map.en<span class="rwordb">try</span>(<span class="stevilo">873</span>, <span class="stevilo">3</span>),<br/>
<tab><tab><tab><tab>Map.en<span class="rwordb">try</span>(<span class="stevilo">179</span>, <span class="stevilo">3</span>),<br/>
<tab><tab><tab><tab>Map.en<span class="rwordb">try</span>(<span class="stevilo">71</span>, <span class="stevilo">2</span>),<br/>
<tab><tab><tab><tab>Map.en<span class="rwordb">try</span>(<span class="stevilo">9</span>, <span class="stevilo">1</span>),<br/>
<tab><tab><tab><tab>Map.en<span class="rwordb">try</span>(<span class="stevilo">5391</span>, <span class="stevilo">4</span>),<br/>
<tab><tab><tab><tab>Map.en<span class="rwordb">try</span>(<span class="stevilo">0</span>, <span class="stevilo">0</span>),<br/>
<tab><tab><tab><tab>Map.en<span class="rwordb">try</span>(<span class="stevilo">3</span>, <span class="stevilo">1</span>),<br/>
<tab><tab><tab><tab>Map.en<span class="rwordb">try</span>(<span class="stevilo">45</span>, <span class="stevilo">2</span>),<br/>
<tab><tab><tab><tab>Map.en<span class="rwordb">try</span>(<span class="stevilo">98</span>, <span class="stevilo">2</span>),<br/>
<tab><tab><tab><tab>Map.en<span class="rwordb">try</span>(<span class="stevilo">128</span>, <span class="stevilo">3</span>),<br/>
<tab><tab><tab><tab>Map.en<span class="rwordb">try</span>(<span class="stevilo">216</span>, <span class="stevilo">3</span>)<br/>
<tab><tab>);<br/>
<tab><tab>Map<Integer, Set<Integer>> obrat = ObratSlovarja.obrni(slovar);<br/>
<tab><tab>izpisi(obrat);<br/>
<tab>}<br/>
<br/>
<tab><span class="rwordv">private</span> <span class="rwordv">static</span> <V, K> <span class="rwordv">void</span> izpisi(Map<V, Set<K>> slovar) {<br/>
<tab><tab>Map<V, Set<K>> novi = <span class="rwordb">new</span> TreeMap<>(slovar);<br/>
<tab><tab><span class="rwordb">for</span> (V v: novi.keySet()) {<br/>
<tab><tab><tab>novi.put(v, <span class="rwordb">new</span> TreeSet<>(slovar.get(v)));<br/>
<tab><tab>}<br/>
<tab><tab><span class="rwordb">for</span> (V v: novi.keySet()) {<br/>
<tab><tab><tab>System.out.printf(<span class="niz">"%s -> %s%n"</span>, v, novi.get(v));<br/>
<tab><tab>}<br/>
<tab>}<br/>
}<br/>


<br/>
                        </td>
                    </tr>
                    <tr>
                        <td>Izhod programa</td>
                        <td class="texttt">
                            0&nbsp;->&nbsp;[0]<br/>1&nbsp;->&nbsp;[3,&nbsp;6,&nbsp;8,&nbsp;9]<br/>2&nbsp;->&nbsp;[10,&nbsp;35,&nbsp;42,&nbsp;45,&nbsp;71,&nbsp;98]<br/>3&nbsp;->&nbsp;[128,&nbsp;179,&nbsp;216,&nbsp;651,&nbsp;782,&nbsp;873]<br/>4&nbsp;->&nbsp;[3421,&nbsp;5391,&nbsp;8712]<br/><br/>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div style="height: 15px"></div>
<div style="font-size: 0.8em;">[ <a href="#top">&uparrow;</a> | <a href="#bottom">&downarrow;</a> | 
<a href="#summary">Povzetek</a> | 
<a href="#testcase1">Rezultati</a> ]</div><div style="height: 30px"></div>
        <a name="testcase3"></a>
        <div style="border: 1px solid #63B563">
            <table class="tableOK tableCommon" style="width: 100%; border: 3px solid #9F9;">
                <tbody>
                    <tr>
                        <td colspan="2" style="background-color: #9F9; color: black;">Testni primer 3</td>
                    </tr>
                    <tr>
                        <td style="width: 200px;">Vhod</td>
                        <td class="texttt">
                            <br/>
<span class="rwordb">import</span> java.util.*;<br/>
<br/>
<span class="rwordv">public</span> <span class="rwordv">class</span> Test03 {<br/>
<br/>
<tab><span class="rwordv">public</span> <span class="rwordv">static</span> <span class="rwordv">void</span> main(String[] args) {<br/>
<tab><tab>Map<String, String> slovar = Map.of(<br/>
<tab><tab><tab><tab><span class="niz">"deska"</span>, <span class="niz">"board"</span>,<br/>
<tab><tab><tab><tab><span class="niz">"dobiti"</span>, <span class="niz">"get"</span>,<br/>
<tab><tab><tab><tab><span class="niz">"doseci"</span>, <span class="niz">"get"</span>,<br/>
<tab><tab><tab><tab><span class="niz">"nacin"</span>, <span class="niz">"way"</span>,<br/>
<tab><tab><tab><tab><span class="niz">"odbor"</span>, <span class="niz">"board"</span>,<br/>
<tab><tab><tab><tab><span class="niz">"pot"</span>, <span class="niz">"way"</span>,<br/>
<tab><tab><tab><tab><span class="niz">"prispeti"</span>, <span class="niz">"get"</span>,<br/>
<tab><tab><tab><tab><span class="niz">"risati"</span>, <span class="niz">"draw"</span>,<br/>
<tab><tab><tab><tab><span class="niz">"tabla"</span>, <span class="niz">"board"</span>,<br/>
<tab><tab><tab><tab><span class="niz">"vleci"</span>, <span class="niz">"draw"</span><br/>
<tab><tab>);<br/>
<tab><tab>Map<String, Set<String>> obrat = ObratSlovarja.obrni(slovar);<br/>
<tab><tab>izpisi(obrat);<br/>
<tab>}<br/>
<br/>
<tab><span class="rwordv">private</span> <span class="rwordv">static</span> <V, K> <span class="rwordv">void</span> izpisi(Map<V, Set<K>> slovar) {<br/>
<tab><tab>Map<V, Set<K>> novi = <span class="rwordb">new</span> TreeMap<>(slovar);<br/>
<tab><tab><span class="rwordb">for</span> (V v: novi.keySet()) {<br/>
<tab><tab><tab>novi.put(v, <span class="rwordb">new</span> TreeSet<>(slovar.get(v)));<br/>
<tab><tab>}<br/>
<tab><tab><span class="rwordb">for</span> (V v: novi.keySet()) {<br/>
<tab><tab><tab>System.out.printf(<span class="niz">"%s -> %s%n"</span>, v, novi.get(v));<br/>
<tab><tab>}<br/>
<tab>}<br/>
}<br/>


<br/>
                        </td>
                    </tr>
                    <tr>
                        <td>Izhod programa</td>
                        <td class="texttt">
                            board&nbsp;->&nbsp;[deska,&nbsp;odbor,&nbsp;tabla]<br/>draw&nbsp;->&nbsp;[risati,&nbsp;vleci]<br/>get&nbsp;->&nbsp;[dobiti,&nbsp;doseci,&nbsp;prispeti]<br/>way&nbsp;->&nbsp;[nacin,&nbsp;pot]<br/><br/>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div style="height: 15px"></div>
<div style="font-size: 0.8em;">[ <a href="#top">&uparrow;</a> | <a href="#bottom">&downarrow;</a> | 
<a href="#summary">Povzetek</a> | 
<a href="#testcase1">Rezultati</a> ]</div><div style="height: 30px"></div>
        <a name="testcase4"></a>
        <div style="border: 1px solid #63B563">
            <table class="tableOK tableCommon" style="width: 100%; border: 3px solid #9F9;">
                <tbody>
                    <tr>
                        <td colspan="2" style="background-color: #9F9; color: black;">Testni primer 4</td>
                    </tr>
                    <tr>
                        <td style="width: 200px;">Vhod</td>
                        <td class="texttt">
                            <br/>
<span class="rwordb">import</span> java.util.*;<br/>
<br/>
<span class="rwordv">public</span> <span class="rwordv">class</span> Test04 {<br/>
<br/>
<tab><span class="rwordv">public</span> <span class="rwordv">static</span> <span class="rwordv">void</span> main(String[] args) {<br/>
<tab><tab>Map<Cas, String> slovar = Map.of(<br/>
<tab><tab><tab><tab><span class="rwordb">new</span> Cas(<span class="stevilo">6</span>, <span class="stevilo">20</span>), <span class="niz">"hrana"</span>,<br/>
<tab><tab><tab><tab><span class="rwordb">new</span> Cas(<span class="stevilo">7</span>, <span class="stevilo">15</span>), <span class="niz">"vlak"</span>,<br/>
<tab><tab><tab><tab><span class="rwordb">new</span> Cas(<span class="stevilo">8</span>, <span class="stevilo">30</span>), <span class="niz">"sestanek"</span>,<br/>
<tab><tab><tab><tab><span class="rwordb">new</span> Cas(<span class="stevilo">10</span>, <span class="stevilo">15</span>), <span class="niz">"vaje"</span>,<br/>
<tab><tab><tab><tab><span class="rwordb">new</span> Cas(<span class="stevilo">12</span>, <span class="stevilo">30</span>), <span class="niz">"hrana"</span>,<br/>
<tab><tab><tab><tab><span class="rwordb">new</span> Cas(<span class="stevilo">13</span>, <span class="stevilo">15</span>), <span class="niz">"vaje"</span>,<br/>
<tab><tab><tab><tab><span class="rwordb">new</span> Cas(<span class="stevilo">17</span>, <span class="stevilo">20</span>), <span class="niz">"vlak"</span>,<br/>
<tab><tab><tab><tab><span class="rwordb">new</span> Cas(<span class="stevilo">18</span>, <span class="stevilo">30</span>), <span class="niz">"hrana"</span>,<br/>
<tab><tab><tab><tab><span class="rwordb">new</span> Cas(<span class="stevilo">19</span>, <span class="stevilo">20</span>), <span class="niz">"gospodinjstvo"</span>,<br/>
<tab><tab><tab><tab><span class="rwordb">new</span> Cas(<span class="stevilo">22</span>, <span class="stevilo">0</span>), <span class="niz">"knjiga"</span><br/>
<tab><tab>);<br/>
<tab><tab>Map<String, Set<Cas>> obrat = ObratSlovarja.obrni(slovar);<br/>
<tab><tab>izpisi(obrat);<br/>
<tab>}<br/>
<br/>
<tab><span class="rwordv">private</span> <span class="rwordv">static</span> <V, K> <span class="rwordv">void</span> izpisi(Map<V, Set<K>> slovar) {<br/>
<tab><tab>Map<V, Set<K>> novi = <span class="rwordb">new</span> TreeMap<>(slovar);<br/>
<tab><tab><span class="rwordb">for</span> (V v: novi.keySet()) {<br/>
<tab><tab><tab>novi.put(v, <span class="rwordb">new</span> TreeSet<>(slovar.get(v)));<br/>
<tab><tab>}<br/>
<tab><tab><span class="rwordb">for</span> (V v: novi.keySet()) {<br/>
<tab><tab><tab>System.out.printf(<span class="niz">"%s -> %s%n"</span>, v, novi.get(v));<br/>
<tab><tab>}<br/>
<tab>}<br/>
<br/>
<tab><span class="rwordv">private</span> <span class="rwordv">static</span> <span class="rwordv">class</span> Cas <span class="rwordb">implements</span> Comparable<Cas> {<br/>
<br/>
<tab><tab><span class="rwordv">private</span> <span class="rwordv">int</span> ura;<br/>
<tab><tab><span class="rwordv">private</span> <span class="rwordv">int</span> minuta;<br/>
<br/>
<tab><tab><span class="rwordv">public</span> Cas(<span class="rwordv">int</span> h, <span class="rwordv">int</span> min) {<br/>
<tab><tab><tab><span class="rwordb">this</span>.ura = h;<br/>
<tab><tab><tab><span class="rwordb">this</span>.minuta = min;<br/>
<tab><tab>}<br/>
<br/>
<tab><tab>@Override<br/>
<tab><tab><span class="rwordv">public</span> String toString() {<br/>
<tab><tab><tab><span class="rwordb">return</span> String.format(<span class="niz">"%d:%02d"</span>, <span class="rwordb">this</span>.ura, <span class="rwordb">this</span>.minuta);<br/>
<tab><tab>}<br/>
<br/>
<tab><tab>@Override<br/>
<tab><tab><span class="rwordv">public</span> <span class="rwordb">boolean</span> equals(Object obj) {<br/>
<tab><tab><tab><span class="rwordb">if</span> (<span class="rwordb">this</span> == obj) {<br/>
<tab><tab><tab><tab><span class="rwordb">return</span> <span class="rwordb">true</span>;<br/>
<tab><tab><tab>}<br/>
<tab><tab><tab><span class="rwordb">if</span> (!(obj <span class="rwordb">instanceof</span> Cas)) {<br/>
<tab><tab><tab><tab><span class="rwordb">return</span> <span class="rwordb">false</span>;<br/>
<tab><tab><tab>}<br/>
<tab><tab><tab>Cas drugi = (Cas) obj;<br/>
<tab><tab><tab><span class="rwordb">return</span> (<span class="rwordb">this</span>.ura == drugi.ura && <span class="rwordb">this</span>.minuta == drugi.minuta);<br/>
<tab><tab>}<br/>
<br/>
<tab><tab>@Override<br/>
<tab><tab><span class="rwordv">public</span> <span class="rwordv">int</span> hashCode() {<br/>
<tab><tab><tab><span class="rwordb">return</span> (<span class="stevilo">60</span> * <span class="rwordb">this</span>.ura + <span class="rwordb">this</span>.minuta);<br/>
<tab><tab>}<br/>
<br/>
<tab><tab>@Override<br/>
<tab><tab><span class="rwordv">public</span> <span class="rwordv">int</span> compareTo(Cas drugi) {<br/>
<tab><tab><tab><span class="rwordb">if</span> (<span class="rwordb">this</span>.ura != drugi.ura) {<br/>
<tab><tab><tab><tab><span class="rwordb">return</span> (<span class="rwordb">this</span>.ura - drugi.ura);<br/>
<tab><tab><tab>}<br/>
<tab><tab><tab><span class="rwordb">return</span> (<span class="rwordb">this</span>.minuta - drugi.minuta);<br/>
<tab><tab>}<br/>
<tab>}<br/>
}<br/>


<br/>
                        </td>
                    </tr>
                    <tr>
                        <td>Izhod programa</td>
                        <td class="texttt">
                            gospodinjstvo&nbsp;->&nbsp;[19:20]<br/>hrana&nbsp;->&nbsp;[6:20,&nbsp;12:30,&nbsp;18:30]<br/>knjiga&nbsp;->&nbsp;[22:00]<br/>sestanek&nbsp;->&nbsp;[8:30]<br/>vaje&nbsp;->&nbsp;[10:15,&nbsp;13:15]<br/>vlak&nbsp;->&nbsp;[7:15,&nbsp;17:20]<br/><br/>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div style="height: 15px"></div>
<div style="font-size: 0.8em;">[ <a href="#top">&uparrow;</a> | <a href="#bottom">&downarrow;</a> | 
<a href="#summary">Povzetek</a> | 
<a href="#testcase1">Rezultati</a> ]</div><div style="height: 30px"></div>

        <div style="height: 30px"></div>

        <table id="grad1" class="tableLegend tableSummary"
          <tbody>
            <tr>
              <td style="color: black;">
              <table class="tableLegend">
                <tr>
	              <td style="background-color: #9F9; color: black; width: 10px; text-align: center; border: 1px solid black; padding: 2px;"></td>
	              <td style="font-size: 0.7em; padding: 3px;">ok</td>
                </tr>
              </table>
              </td>
              <td style="color: black;">
              <table class="tableLegend">
                <tr>
	              <td style="background-color: #FFBF00; color: black; width: 10px; text-align: center; border: 1px solid black; padding: 2px;"></td>
	              <td style="font-size: 0.7em; padding: 3px;">napaka</td>
                </tr>
              </table>
              </td>
              <td style="color: black;">
              <table class="tableLegend">
                <tr>
	              <td style="background-color: #FF9; color: black; width: 10px; text-align: center; border: 1px solid black; padding: 2px;"></td>
	              <td style="font-size: 0.7em; padding: 3px;">napaka med izvajanjem</td>
                </tr>
              </table>
              </td>
              <td style="color: black;">
              <table class="tableLegend">
                <tr>
	              <td style="background-color: #C00000; color: black; width: 10px; text-align: center; border: 1px solid black; padding: 2px;"></td>
	              <td style="font-size: 0.7em; padding: 3px;">se ne prevede</td>
                </tr>
              </table>
              </td>
              <td style="color: black;">
              <table class="tableLegend">
                <tr>
	              <td style="background-color: #B9F; color: black; width: 10px; text-align: center; border: 1px solid black; padding: 2px;"></td>
	              <td style="font-size: 0.7em; padding: 3px;">timeout (1000 ms)</td>
                </tr>
              </table>
              </td>
              <td style="color: black;">
              <table class="tableLegend">
                <tr>
	              <td style="background-color: #D0E0F0; color: black; width: 10px; text-align: center; border: 1px solid black; padding: 2px;"></td>
	              <td style="font-size: 0.7em; padding: 3px;">rezultat izrisa</td>
                </tr>
              </table>
              </td>
            </tr>
          </tbody>
        </table>
        <a name="bottom"></a>
        </div>
    </body>
    <!-- java class tester version "1.5.12" -->
    <!-- 7.2.2024 16:23.27 -->
    <!-- ASUS_E2, fe80::ccc:fed8:240:ed43%8 -->
</html>
