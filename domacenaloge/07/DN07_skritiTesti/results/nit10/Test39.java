
import java.util.Arrays;
import java.util.Comparator;

public class Test39 {
    
    public static void main(String[] args) {
        
        Oseba[][] os = new Oseba[19][];
        os[0] = new Oseba[7];
        os[0][0] = new Oseba("a b", 'M', 8455);
        os[0][1] = new Oseba("a b", 'Z', 7192);
        os[0][2] = new Oseba("a b", 'Z', 2404);
        os[0][3] = new Oseba("a b", 'M', 8684);
        os[0][4] = new Oseba("a b", 'M', 575);
        os[0][5] = new Oseba("a b", 'Z', 9709);
        os[0][6] = new Oseba("a b", 'Z', 6501);
        os[1] = new Oseba[3];
        os[1][0] = new Oseba("a b", 'M', 6250);
        os[1][1] = new Oseba("a b", 'Z', 8720);
        os[1][2] = new Oseba("a b", 'M', 4363);
        os[2] = new Oseba[0];
        os[3] = new Oseba[7];
        os[3][0] = new Oseba("a b", 'Z', 2507);
        os[3][1] = new Oseba("a b", 'Z', 610);
        os[3][2] = new Oseba("a b", 'M', 5841);
        os[3][3] = new Oseba("a b", 'Z', 2858);
        os[3][4] = new Oseba("a b", 'Z', 3679);
        os[3][5] = new Oseba("a b", 'M', 7139);
        os[3][6] = new Oseba("a b", 'M', 257);
        os[4] = new Oseba[6];
        os[4][0] = new Oseba("a b", 'M', 4804);
        os[4][1] = new Oseba("a b", 'M', 1996);
        os[4][2] = new Oseba("a b", 'Z', 5986);
        os[4][3] = new Oseba("a b", 'Z', 7519);
        os[4][4] = new Oseba("a b", 'Z', 4749);
        os[4][5] = new Oseba("a b", 'M', 8967);
        os[5] = new Oseba[1];
        os[5][0] = new Oseba("a b", 'M', 4517);
        os[6] = new Oseba[7];
        os[6][0] = new Oseba("a b", 'Z', 7049);
        os[6][1] = new Oseba("a b", 'M', 1128);
        os[6][2] = new Oseba("a b", 'Z', 6438);
        os[6][3] = new Oseba("a b", 'M', 1965);
        os[6][4] = new Oseba("a b", 'M', 6191);
        os[6][5] = new Oseba("a b", 'M', 3272);
        os[6][6] = new Oseba("a b", 'Z', 7524);
        os[7] = new Oseba[7];
        os[7][0] = new Oseba("a b", 'M', 4585);
        os[7][1] = new Oseba("a b", 'M', 4287);
        os[7][2] = new Oseba("a b", 'Z', 7657);
        os[7][3] = new Oseba("a b", 'M', 5668);
        os[7][4] = new Oseba("a b", 'M', 5505);
        os[7][5] = new Oseba("a b", 'M', 2166);
        os[7][6] = new Oseba("a b", 'Z', 1805);
        os[8] = new Oseba[3];
        os[8][0] = new Oseba("a b", 'M', 5165);
        os[8][1] = new Oseba("a b", 'M', 8959);
        os[8][2] = new Oseba("a b", 'Z', 976);
        os[9] = new Oseba[1];
        os[9][0] = new Oseba("a b", 'M', 8911);
        os[10] = new Oseba[0];
        os[11] = new Oseba[1];
        os[11][0] = new Oseba("a b", 'M', 7790);
        os[12] = new Oseba[6];
        os[12][0] = new Oseba("a b", 'M', 8294);
        os[12][1] = new Oseba("a b", 'M', 1442);
        os[12][2] = new Oseba("a b", 'Z', 2015);
        os[12][3] = new Oseba("a b", 'M', 4249);
        os[12][4] = new Oseba("a b", 'M', 6538);
        os[12][5] = new Oseba("a b", 'Z', 1270);
        os[13] = new Oseba[5];
        os[13][0] = new Oseba("a b", 'Z', 12);
        os[13][1] = new Oseba("a b", 'M', 5125);
        os[13][2] = new Oseba("a b", 'Z', 5984);
        os[13][3] = new Oseba("a b", 'Z', 1896);
        os[13][4] = new Oseba("a b", 'M', 1249);
        os[14] = new Oseba[6];
        os[14][0] = new Oseba("a b", 'M', 9721);
        os[14][1] = new Oseba("a b", 'M', 7081);
        os[14][2] = new Oseba("a b", 'Z', 68);
        os[14][3] = new Oseba("a b", 'Z', 5425);
        os[14][4] = new Oseba("a b", 'M', 1584);
        os[14][5] = new Oseba("a b", 'M', 9930);
        os[15] = new Oseba[0];
        os[16] = new Oseba[7];
        os[16][0] = new Oseba("a b", 'Z', 6352);
        os[16][1] = new Oseba("a b", 'M', 1487);
        os[16][2] = new Oseba("a b", 'Z', 6862);
        os[16][3] = new Oseba("a b", 'Z', 3609);
        os[16][4] = new Oseba("a b", 'M', 1595);
        os[16][5] = new Oseba("a b", 'Z', 548);
        os[16][6] = new Oseba("a b", 'M', 7867);
        os[17] = new Oseba[6];
        os[17][0] = new Oseba("a b", 'Z', 7460);
        os[17][1] = new Oseba("a b", 'M', 5934);
        os[17][2] = new Oseba("a b", 'Z', 5964);
        os[17][3] = new Oseba("a b", 'Z', 7153);
        os[17][4] = new Oseba("a b", 'M', 7191);
        os[17][5] = new Oseba("a b", 'Z', 6943);
        os[18] = new Oseba[2];
        os[18][0] = new Oseba("a b", 'Z', 1122);
        os[18][1] = new Oseba("a b", 'M', 9908);
        
        Stanovanje[] st = new Stanovanje[19];
        st[0] = new Stanovanje(os[0]);
        st[1] = new Stanovanje(os[1]);
        st[2] = new Stanovanje(os[2]);
        st[3] = new Stanovanje(os[3]);
        st[4] = new Stanovanje(os[4]);
        st[5] = new Stanovanje(os[5]);
        st[6] = new Stanovanje(os[6]);
        st[7] = new Stanovanje(os[7]);
        st[8] = new Stanovanje(os[8]);
        st[9] = new Stanovanje(os[9]);
        st[10] = new Stanovanje(os[10]);
        st[11] = new Stanovanje(os[11]);
        st[12] = new Stanovanje(os[12]);
        st[13] = new Stanovanje(os[13]);
        st[14] = new Stanovanje(os[14]);
        st[15] = new Stanovanje(os[15]);
        st[16] = new Stanovanje(os[16]);
        st[17] = new Stanovanje(os[17]);
        st[18] = new Stanovanje(os[18]);
        st[0].nastaviSosede(st[6], null, null, st[17]);
        st[1].nastaviSosede(null, null, st[6], st[12]);
        st[2].nastaviSosede(st[18], st[10], st[5], st[14]);
        st[3].nastaviSosede(null, null, st[12], st[10]);
        st[4].nastaviSosede(st[12], st[6], st[17], st[11]);
        st[5].nastaviSosede(st[2], st[8], st[15], st[7]);
        st[6].nastaviSosede(st[1], st[9], st[0], st[4]);
        st[7].nastaviSosede(st[14], st[5], null, null);
        st[8].nastaviSosede(st[10], st[12], st[11], st[5]);
        st[9].nastaviSosede(null, null, null, st[6]);
        st[10].nastaviSosede(st[13], st[3], st[8], st[2]);
        st[11].nastaviSosede(st[8], st[4], st[16], st[15]);
        st[12].nastaviSosede(st[3], st[1], st[4], st[8]);
        st[13].nastaviSosede(null, null, st[10], st[18]);
        st[14].nastaviSosede(null, st[2], st[7], null);
        st[15].nastaviSosede(st[5], st[11], null, null);
        st[16].nastaviSosede(st[11], st[17], null, null);
        st[17].nastaviSosede(st[4], st[0], null, st[16]);
        st[18].nastaviSosede(null, st[13], st[2], null);
        
        Oseba[] oss = new Oseba[22];
        oss[0] = os[8][0];
        oss[1] = os[8][1];
        oss[2] = os[8][2];
        oss[3] = os[7][0];
        oss[4] = os[7][1];
        oss[5] = os[7][2];
        oss[6] = os[7][3];
        oss[7] = os[7][4];
        oss[8] = os[7][5];
        oss[9] = os[7][6];
        oss[10] = os[3][0];
        oss[11] = os[3][1];
        oss[12] = os[3][2];
        oss[13] = os[3][3];
        oss[14] = os[3][4];
        oss[15] = os[3][5];
        oss[16] = os[3][6];
        oss[17] = os[13][0];
        oss[18] = os[13][1];
        oss[19] = os[13][2];
        oss[20] = os[13][3];
        oss[21] = os[13][4];
        Comparator<Oseba> comp = new Comparator<Oseba>() { public int compare(Oseba a, Oseba b) { return a.hashCode() - b.hashCode(); } };
        Arrays.sort(oss, comp);
        Oseba[] rezultat = st[2].sosedjeSosedov();
        Arrays.sort(rezultat, comp);
        TestSkupno.preveri(Arrays.equals(oss, rezultat));
    }
}
