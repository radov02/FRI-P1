<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" 
          "http://www.w3.org/TR/html4/strict.dtd">
<html>
    <head>
        <title>Prikaz rezultatov testiranja</title>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
        <style>
            .tableBase { border-collapse: collapse; }
            .tableBase > tbody > tr > td { border: 1px solid black; padding: 7px;}
            .tableResults { table-layout: fixed; border-spacing: 0px; border-collapse: separate; }
            table#nasredini { margin-left:auto; margin-right:auto; }
            table tbody td.hoverOk {background-color:#9F9; border: 1px solid #63B563; width: 15px; color: black; text-align: center; }
            .hoverOk:hover { background-color: #FAFAF0; !important; color: #000; border: 1px solid #63B563; }
            .hoverOk:hover td { background: transparent; }
            .hoverOk > a:link, .hoverOk > a:visited, .hoverOk > a:hover, .hoverOk > a:active { color: black; font-size: 0.9em; }
            table tbody td.hoverErr {background-color:#FFBF00; border: 1px solid #CB9800; width: 15px; color: black; text-align: center; }
            .hoverErr:hover { background-color: #FAFAF0; !important; color: #000; border: 1px solid #CB9800; }
            .hoverErr:hover td { background: transparent; }
            .hoverErr > a:link, .hoverErr > a:visited, .hoverErr > a:hover, .hoverErr > a:active { color: black; font-size: 0.9em; }
            table tbody td.hoverRuntime {background-color:#FF9; border: 1px solid #D8D87E; width: 15px; color: black; text-align: center; }
            .hoverRuntime:hover { background-color: #FAFAF0; !important; color: #000; border: 1px solid #D8D87E; }
            .hoverRuntime:hover td { background: transparent; }
            .hoverRuntime > a:link, .hoverRuntime > a:visited, .hoverRuntime > a:hover, .hoverRuntime > a:active { color: black; font-size: 0.9em; }
            table tbody td.hoverCompile {background-color:#C00000; border: 1px solid #710B0B; width: 15px; color: black; text-align: center; }
            .hoverCompile:hover { background-color: #FAFAF0; !important; color: #000; border: 1px solid #710B0B; }
            .hoverCompile:hover td { background: transparent; }
            .hoverCompile > a:link, .hoverCompile > a:visited, .hoverCompile > a:hover, .hoverCompile > a:active { color: black; font-size: 0.9em; }
            table tbody td.hoverMissing {background-color:#F0F0F0; border: 1px solid #ABABAB; width: 15px; color: black; text-align: center; }
            .hoverMissing:hover { background-color: #FAFAF0; !important; color: #000; border: 1px solid #ABABAB; }
            .hoverMissing:hover td { background: transparent; }
            .hoverMissing > a:link, .hoverMissing > a:visited, .hoverMissing > a:hover, .hoverMissing > a:active { color: black; font-size: 0.9em; }
            table tbody td.hoverTimeout {background-color:#B9F; border: 1px solid #9070CE; width: 15px; color: black; text-align: center; }
            .hoverTimeout:hover { background-color: #FAFAF0; !important; color: #000; border: 1px solid #9070CE; }
            .hoverTimeout:hover td { background: transparent; }
            .hoverTimeout > a:link, .hoverTimeout > a:visited, .hoverTimeout > a:hover, .hoverTimeout > a:active { color: black; font-size: 0.9em; }
            table tbody td.hoverImage {background-color:#D0E0F0; border: 1px solid #a6b3c0; width: 15px; color: black; text-align: center; }
            .hoverImage:hover { background-color: #FAFAF0; !important; color: #000; border: 1px solid #a6b3c0; }
            .hoverImage:hover td { background: transparent; }
            .hoverImage > a:link, .hoverImage > a:visited, .hoverImage > a:hover, .hoverImage > a:active { color: black; font-size: 0.9em; }
            .tableCommon { border-collapse: collapse; }
            .tableOK > tbody > tr > td { border: 1px solid #63B563; padding: 7px;}
            .tableError > tbody > tr > td { border: 1px solid #CB9800; padding: 7px;}
            .tableRuntime > tbody > tr > td { border: 1px solid #D8D87E; padding: 7px;}
            .tableCompiler > tbody > tr > td { border: 1px solid #710B0B; padding: 7px;}
            .tableMissing > tbody > tr > td { border: 1px solid #ABABAB; padding: 7px;}
            .tableTimeout > tbody > tr > td { border: 1px solid #9070CE; padding: 7px;}
            .tableImage > tbody > tr > td { border: 1px solid #a6b3c0; padding: 7px;}
            .tableSummary { table-layout: fixed; }
            .texttt { font-family: DejaVu Sans Mono, monospace; font-size: 0.8em; }
            table.diff > tbody > tr > td { border: none; font-family: DejaVu Sans Mono, monospace}
            .diff_add { color: green; font-family: DejaVu Sans Mono, monospace; }
            .diff_sub { color: blue; font-family: DejaVu Sans Mono, monospace; }
            .diff_chg { color: red; font-family: DejaVu Sans Mono, monospace; }
            a { color: blue; text-decoration: none; height: 100%; width: 100%; vertical-align: middle; }
            a:link { color: blue; text-decoration: none; }
            a:link { color: blue; text-decoration: none; }
            a:hover { color: blue; text-decoration: underline; }
            body, td { font: normal normal 100%/1.0 DejaVu Sans, sans-serif; }
            h1 { font-weight: bold; font-size: 150%; }
            h2 { font-weight: normal; font-size: 125%; border-top: 1px solid black; border-bottom: 1px solid black; background: #DEF; padding: 5px; margin-top: 36px; margin-bottom: 36px}
            .container{ margin: 0px auto; width: 70%; min-width: 700px; margin-top: 1.8cm; margin-bottom: 1.8cm; }
            .rwordb{ color: blue; font-weight: bold; }
            .rwordv{ color:#8000ff; font-weight: bold; }
            .vcomment{ color: green; }
            .bcomment{ color: green; }
            .niz{ color:#a31515; }
            .stevilo{ color:#ff8000; }
            tab { padding-left: 4em; }
            #grad1 {
                background: -webkit-linear-gradient(left, #E0E0E0 , white);
                background: -o-linear-gradient(right, #E0E0E0, white);
                background: -moz-linear-gradient(right, #E0E0E0, white);
                background: linear-gradient(to right, #E0E0E0 , white);
            }
            #grad2 {
                background: -webkit-linear-gradient(left, #FFBF00 , white);
                background: -o-linear-gradient(right, #FFBF00, white);
                background: -moz-linear-gradient(right, #FFBF00, white);
                background: linear-gradient(to right, #FFBF00 , white);
            }
            .capSlika { display:block; height: 25px; margin:0 auto; font-size: 1.0em; text-align: left; }
            .dborder { padding: 0px; border: 1px solid #CACACA; }
            .capText { display: block; margin:0 auto; font-size: 0.9em; text-align: left; }
        </style>
    </head>
    <body>
        <div class="container">
        <a name="top"></a>
        <h1 id="grad2" style="padding: 10px; border: 0px solid black; color: #000000;">Rezultati preverjanja metod programa (0/5)</h1>
        <div style="height: 20px"></div>
        <a name="summary"></a>
        <h2>Povzetek rezultatov</h2>
        <table id="nasredini" class="tableBase tableResults">
            <tbody>
                <tr>
                <td class="hoverRuntime"><a href="#testcase6">6</a></td>
                <td class="hoverRuntime"><a href="#testcase7">7</a></td>
                <td class="hoverRuntime"><a href="#testcase8">8</a></td>
                <td class="hoverRuntime"><a href="#testcase9">9</a></td>
                <td class="hoverRuntime"><a href="#testcase10">10</a></td>
                </tr>
                <tr></tr>
            </tbody>
        </table>
        <div style="height: 20px"></div>
        <h2>Rezultati</h2>
        <a name="testcase6"></a>
        <div style="border: 1px solid #D8D87E">
            <table class="tableRuntime tableCommon" style="width: 100%; border: 3px solid #FF9;">
                <tbody>
                    <tr>
                        <td colspan="2" style="background-color: #FF9; color: black;">Testni primer 6</td>
                    </tr>
                    <tr>
                        <td style="width: 200px;">Vhod</td>
                        <td class="texttt">
                            <br/>
<span class="rwordb">import</span> java.util.*;<br/>
<br/>
<span class="rwordv">public</span> <span class="rwordv">class</span> Test06 {<br/>
<br/>
<tab><span class="rwordv">public</span> <span class="rwordv">static</span> <span class="rwordv">void</span> main(String[] args) {<br/>
<tab><tab>Map<String, Set<String>> sinonimi = <span class="rwordb">new</span> HashMap<>();<br/>
<tab><tab>sinonimi.put(<span class="niz">"hisa"</span>, Set.of(<span class="niz">"hisa"</span>, <span class="niz">"bajta"</span>, <span class="niz">"koca"</span>, <span class="niz">"dom"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"bajta"</span>, Set.of(<span class="niz">"hisa"</span>, <span class="niz">"bajta"</span>, <span class="niz">"koca"</span>, <span class="niz">"dom"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"koca"</span>, Set.of(<span class="niz">"hisa"</span>, <span class="niz">"bajta"</span>, <span class="niz">"koca"</span>, <span class="niz">"dom"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"dom"</span>, Set.of(<span class="niz">"hisa"</span>, <span class="niz">"bajta"</span>, <span class="niz">"koca"</span>, <span class="niz">"dom"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"veselje"</span>, Set.of(<span class="niz">"veselje"</span>, <span class="niz">"radost"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"radost"</span>, Set.of(<span class="niz">"veselje"</span>, <span class="niz">"radost"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"spet"</span>, Set.of(<span class="niz">"spet"</span>, <span class="niz">"zopet"</span>, <span class="niz">"ponovno"</span>, <span class="niz">"znova"</span>, <span class="niz">"vnovic"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"zopet"</span>, Set.of(<span class="niz">"spet"</span>, <span class="niz">"zopet"</span>, <span class="niz">"ponovno"</span>, <span class="niz">"znova"</span>, <span class="niz">"vnovic"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"ponovno"</span>, Set.of(<span class="niz">"spet"</span>, <span class="niz">"zopet"</span>, <span class="niz">"ponovno"</span>, <span class="niz">"znova"</span>, <span class="niz">"vnovic"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"znova"</span>, Set.of(<span class="niz">"spet"</span>, <span class="niz">"zopet"</span>, <span class="niz">"ponovno"</span>, <span class="niz">"znova"</span>, <span class="niz">"vnovic"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"vnovic"</span>, Set.of(<span class="niz">"spet"</span>, <span class="niz">"zopet"</span>, <span class="niz">"ponovno"</span>, <span class="niz">"znova"</span>, <span class="niz">"vnovic"</span>));<br/>
<br/>
<tab><tab>Map<Set<String>, Integer> slovar = Cetrta.pogostost(<br/>
<tab><tab><tab><span class="niz">"hisa ni velika je pa veselje spet in zopet in znova veselje "</span> +<br/>
<tab><tab><tab><span class="niz">"in radost in znova in vnovic in spet in zopet veselje "</span> +<br/>
<tab><tab><tab><span class="niz">"ta bajta je res pravi dom moj prvi pravi dom "</span> +<br/>
<tab><tab><tab><span class="niz">"ceprav je bolj koca kot hisa"</span>,<br/>
<tab><tab><tab>sinonimi<br/>
<tab><tab>);<br/>
<br/>
<tab><tab>List<String> seznam = <span class="rwordb">new</span> ArrayList<>();<br/>
<tab><tab><span class="rwordb">for</span> (Set<String> mnozica: slovar.keySet()) {<br/>
<tab><tab><tab>List<String> lstMnozica = <span class="rwordb">new</span> ArrayList<>(mnozica);<br/>
<tab><tab><tab>lstMnozica.sort(null);<br/>
<tab><tab><tab>seznam.add(String.format(<span class="niz">"%s -> %d"</span>, lstMnozica, slovar.get(mnozica)));<br/>
<tab><tab>}<br/>
<tab><tab>seznam.sort(null);<br/>
<tab><tab><span class="rwordb">for</span> (String s: seznam) {<br/>
<tab><tab><tab>System.out.println(s);<br/>
<tab><tab>}<br/>
<tab>}<br/>
}<br/>


<br/>
                        </td>
                    </tr>
                    <tr>
                        <td>Izhod programa</td>
                        <td class="texttt">
                            [hisa]<br/>zopet&nbsp;->&nbsp;1<br/>res&nbsp;->&nbsp;1<br/>prvi&nbsp;->&nbsp;1<br/>dom&nbsp;->&nbsp;1<br/>in&nbsp;->&nbsp;1<br/>bolj&nbsp;->&nbsp;1<br/>vnovic&nbsp;->&nbsp;1<br/>moj&nbsp;->&nbsp;1<br/>bajta&nbsp;->&nbsp;1<br/>ceprav&nbsp;->&nbsp;1<br/>znova&nbsp;->&nbsp;1<br/>ta&nbsp;->&nbsp;1<br/>pravi&nbsp;->&nbsp;1<br/>koca&nbsp;->&nbsp;1<br/>pa&nbsp;->&nbsp;1<br/>kot&nbsp;->&nbsp;1<br/>radost&nbsp;->&nbsp;1<br/>spet&nbsp;->&nbsp;1<br/>veselje&nbsp;->&nbsp;1<br/>ni&nbsp;->&nbsp;1<br/>je&nbsp;->&nbsp;1<br/>hisa&nbsp;->&nbsp;1<br/>velika&nbsp;->&nbsp;1<br/>Exception&nbsp;in&nbsp;thread&nbsp;"main"&nbsp;java.lang.NullPointerException:&nbsp;Cannot&nbsp;invoke&nbsp;"java.util.Map.keySet()"&nbsp;because&nbsp;"<local2>"&nbsp;is&nbsp;null<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;Test06.main(Test06.java:29)<br/><br/>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div style="height: 15px"></div>
<div style="font-size: 0.8em;">[ <a href="#top">&uparrow;</a> | <a href="#bottom">&downarrow;</a> | 
<a href="#summary">Povzetek</a> | 
<a href="#testcase1">Rezultati</a> ]</div><div style="height: 30px"></div>
        <a name="testcase7"></a>
        <div style="border: 1px solid #D8D87E">
            <table class="tableRuntime tableCommon" style="width: 100%; border: 3px solid #FF9;">
                <tbody>
                    <tr>
                        <td colspan="2" style="background-color: #FF9; color: black;">Testni primer 7</td>
                    </tr>
                    <tr>
                        <td style="width: 200px;">Vhod</td>
                        <td class="texttt">
                            <br/>
<span class="rwordb">import</span> java.util.*;<br/>
<br/>
<span class="rwordv">public</span> <span class="rwordv">class</span> Test07 {<br/>
<br/>
<tab><span class="rwordv">public</span> <span class="rwordv">static</span> <span class="rwordv">void</span> main(String[] args) {<br/>
<br/>
<tab><tab>Map<String, Set<String>> sinonimi = <span class="rwordb">new</span> HashMap<>();<br/>
<tab><tab>sinonimi.put(<span class="niz">"z"</span>, Set.of(<span class="niz">"z"</span>, <span class="niz">"cgg"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"cgg"</span>, Set.of(<span class="niz">"z"</span>, <span class="niz">"cgg"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"oz"</span>, Set.of(<span class="niz">"oz"</span>, <span class="niz">"br"</span>, <span class="niz">"sppx"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"br"</span>, Set.of(<span class="niz">"oz"</span>, <span class="niz">"br"</span>, <span class="niz">"sppx"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"sppx"</span>, Set.of(<span class="niz">"oz"</span>, <span class="niz">"br"</span>, <span class="niz">"sppx"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"txnd"</span>, Set.of(<span class="niz">"txnd"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"zmvfp"</span>, Set.of(<span class="niz">"zmvfp"</span>, <span class="niz">"uqlm"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"uqlm"</span>, Set.of(<span class="niz">"zmvfp"</span>, <span class="niz">"uqlm"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"frm"</span>, Set.of(<span class="niz">"frm"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"vuyv"</span>, Set.of(<span class="niz">"vuyv"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"ph"</span>, Set.of(<span class="niz">"ph"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"bkgg"</span>, Set.of(<span class="niz">"bkgg"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"uxq"</span>, Set.of(<span class="niz">"uxq"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"bduq"</span>, Set.of(<span class="niz">"bduq"</span>, <span class="niz">"kdgol"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"kdgol"</span>, Set.of(<span class="niz">"bduq"</span>, <span class="niz">"kdgol"</span>));<br/>
<br/>
<tab><tab>Map<Set<String>, Integer> slovar = Cetrta.pogostost(<span class="niz">"dxcl tj bdohk wuge cjgks dzy ca hv sbby sbby bapo ks qcr pn ciwyt usatj zmp xreb itqa y gee gr sbby nsdn nfjc weof gho dx alni mw fqe tino sew un rks eehco vmjn pq lz roh ier qbmn ibg olkwp jl uxmxk dwa tq glqv fy qbmn lhist xssnz mcchd xhs kgxv o bgkdq nsdn u qgmwv db ws sr g ka qlue wmjvm m p rrk s ymfzz gr xjv atcx mxds beai wlxbe oalb tt jkcxc mrnos xd evfwz fphb cjgks rejg dkhwy oq ui mgsk tsxrb ocezj rylvq qtiob bkgg gmkxc qdak jstpg kp rewle uxmxk nequx z djqfp rjs nfjc bfz ht gbzdc tpfrb ee atcx l saaj fzls wihnu xssnz nd c heufb qnock tq fn gbuo jl ggpxz si kp ez yf kdkp sabri zzke usatj wluh ws levl vnkuj vyy gee qdak iirz oqca cz wfjcu okin ibg zzke lz yf gx ugrja lpqd"</span>, sinonimi);<br/>
<tab><tab>List<String> seznam = <span class="rwordb">new</span> ArrayList<>();<br/>
<tab><tab><span class="rwordb">for</span> (Set<String> mnozica: slovar.keySet()) {<br/>
<tab><tab><tab>List<String> lstMnozica = <span class="rwordb">new</span> ArrayList<>(mnozica);<br/>
<tab><tab><tab>lstMnozica.sort(null);<br/>
<tab><tab><tab>seznam.add(String.format(<span class="niz">"%s -> %d"</span>, lstMnozica, slovar.get(mnozica)));<br/>
<tab><tab>}<br/>
<tab><tab>seznam.sort(null);<br/>
<tab><tab><span class="rwordb">for</span> (String s: seznam) {<br/>
<tab><tab><tab>System.out.println(s);<br/>
<tab><tab>}<br/>
<tab>}<br/>
}<br/>


<br/>
                        </td>
                    </tr>
                    <tr>
                        <td>Izhod programa</td>
                        <td class="texttt">
                            [dxcl]<br/>pq&nbsp;->&nbsp;1<br/>djqfp&nbsp;->&nbsp;1<br/>ciwyt&nbsp;->&nbsp;1<br/>wuge&nbsp;->&nbsp;1<br/>alni&nbsp;->&nbsp;1<br/>vmjn&nbsp;->&nbsp;1<br/>ht&nbsp;->&nbsp;1<br/>yf&nbsp;->&nbsp;1<br/>hv&nbsp;->&nbsp;1<br/>weof&nbsp;->&nbsp;1<br/>vyy&nbsp;->&nbsp;1<br/>wluh&nbsp;->&nbsp;1<br/>rrk&nbsp;->&nbsp;1<br/>gmkxc&nbsp;->&nbsp;1<br/>xreb&nbsp;->&nbsp;1<br/>dwa&nbsp;->&nbsp;1<br/>uxmxk&nbsp;->&nbsp;1<br/>okin&nbsp;->&nbsp;1<br/>mrnos&nbsp;->&nbsp;1<br/>rjs&nbsp;->&nbsp;1<br/>vnkuj&nbsp;->&nbsp;1<br/>nsdn&nbsp;->&nbsp;1<br/>heufb&nbsp;->&nbsp;1<br/>mgsk&nbsp;->&nbsp;1<br/>jl&nbsp;->&nbsp;1<br/>gee&nbsp;->&nbsp;1<br/>qbmn&nbsp;->&nbsp;1<br/>bgkdq&nbsp;->&nbsp;1<br/>mxds&nbsp;->&nbsp;1<br/>qdak&nbsp;->&nbsp;1<br/>ggpxz&nbsp;->&nbsp;1<br/>itqa&nbsp;->&nbsp;1<br/>ocezj&nbsp;->&nbsp;1<br/>kdkp&nbsp;->&nbsp;1<br/>ymfzz&nbsp;->&nbsp;1<br/>bapo&nbsp;->&nbsp;1<br/>tsxrb&nbsp;->&nbsp;1<br/>ka&nbsp;->&nbsp;1<br/>si&nbsp;->&nbsp;1<br/>iirz&nbsp;->&nbsp;1<br/>rks&nbsp;->&nbsp;1<br/>ca&nbsp;->&nbsp;1<br/>qgmwv&nbsp;->&nbsp;1<br/>sr&nbsp;->&nbsp;1<br/>c&nbsp;->&nbsp;1<br/>sew&nbsp;->&nbsp;1<br/>kp&nbsp;->&nbsp;1<br/>mcchd&nbsp;->&nbsp;1<br/>g&nbsp;->&nbsp;1<br/>gbzdc&nbsp;->&nbsp;1<br/>ks&nbsp;->&nbsp;1<br/>kgxv&nbsp;->&nbsp;1<br/>rewle&nbsp;->&nbsp;1<br/>fzls&nbsp;->&nbsp;1<br/>l&nbsp;->&nbsp;1<br/>m&nbsp;->&nbsp;1<br/>ibg&nbsp;->&nbsp;1<br/>o&nbsp;->&nbsp;1<br/>p&nbsp;->&nbsp;1<br/>s&nbsp;->&nbsp;1<br/>fphb&nbsp;->&nbsp;1<br/>xssnz&nbsp;->&nbsp;1<br/>u&nbsp;->&nbsp;1<br/>tj&nbsp;->&nbsp;1<br/>cz&nbsp;->&nbsp;1<br/>y&nbsp;->&nbsp;1<br/>wlxbe&nbsp;->&nbsp;1<br/>z&nbsp;->&nbsp;1<br/>tq&nbsp;->&nbsp;1<br/>db&nbsp;->&nbsp;1<br/>tt&nbsp;->&nbsp;1<br/>nequx&nbsp;->&nbsp;1<br/>xhs&nbsp;->&nbsp;1<br/>beai&nbsp;->&nbsp;1<br/>rejg&nbsp;->&nbsp;1<br/>gbuo&nbsp;->&nbsp;1<br/>jstpg&nbsp;->&nbsp;1<br/>sabri&nbsp;->&nbsp;1<br/>eehco&nbsp;->&nbsp;1<br/>tpfrb&nbsp;->&nbsp;1<br/>lz&nbsp;->&nbsp;1<br/>wfjcu&nbsp;->&nbsp;1<br/>dx&nbsp;->&nbsp;1<br/>ui&nbsp;->&nbsp;1<br/>qtiob&nbsp;->&nbsp;1<br/>un&nbsp;->&nbsp;1<br/>zmp&nbsp;->&nbsp;1<br/>usatj&nbsp;->&nbsp;1<br/>ee&nbsp;->&nbsp;1<br/>qcr&nbsp;->&nbsp;1<br/>dzy&nbsp;->&nbsp;1<br/>wihnu&nbsp;->&nbsp;1<br/>zzke&nbsp;->&nbsp;1<br/>bdohk&nbsp;->&nbsp;1<br/>lpqd&nbsp;->&nbsp;1<br/>mw&nbsp;->&nbsp;1<br/>jkcxc&nbsp;->&nbsp;1<br/>lhist&nbsp;->&nbsp;1<br/>gho&nbsp;->&nbsp;1<br/>ez&nbsp;->&nbsp;1<br/>nd&nbsp;->&nbsp;1<br/>qnock&nbsp;->&nbsp;1<br/>bfz&nbsp;->&nbsp;1<br/>evfwz&nbsp;->&nbsp;1<br/>tino&nbsp;->&nbsp;1<br/>nfjc&nbsp;->&nbsp;1<br/>saaj&nbsp;->&nbsp;1<br/>xjv&nbsp;->&nbsp;1<br/>atcx&nbsp;->&nbsp;1<br/>bkgg&nbsp;->&nbsp;1<br/>fn&nbsp;->&nbsp;1<br/>olkwp&nbsp;->&nbsp;1<br/>roh&nbsp;->&nbsp;1<br/>wmjvm&nbsp;->&nbsp;1<br/>dkhwy&nbsp;->&nbsp;1<br/>dxcl&nbsp;->&nbsp;1<br/>sbby&nbsp;->&nbsp;1<br/>fy&nbsp;->&nbsp;1<br/>ier&nbsp;->&nbsp;1<br/>ws&nbsp;->&nbsp;1<br/>levl&nbsp;->&nbsp;1<br/>qlue&nbsp;->&nbsp;1<br/>oq&nbsp;->&nbsp;1<br/>gr&nbsp;->&nbsp;1<br/>cjgks&nbsp;->&nbsp;1<br/>xd&nbsp;->&nbsp;1<br/>gx&nbsp;->&nbsp;1<br/>oqca&nbsp;->&nbsp;1<br/>ugrja&nbsp;->&nbsp;1<br/>glqv&nbsp;->&nbsp;1<br/>fqe&nbsp;->&nbsp;1<br/>oalb&nbsp;->&nbsp;1<br/>pn&nbsp;->&nbsp;1<br/>rylvq&nbsp;->&nbsp;1<br/>Exception&nbsp;in&nbsp;thread&nbsp;"main"&nbsp;java.lang.NullPointerException:&nbsp;Cannot&nbsp;invoke&nbsp;"java.util.Map.keySet()"&nbsp;because&nbsp;"<local2>"&nbsp;is&nbsp;null<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;Test07.main(Test07.java:27)<br/><br/>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div style="height: 15px"></div>
<div style="font-size: 0.8em;">[ <a href="#top">&uparrow;</a> | <a href="#bottom">&downarrow;</a> | 
<a href="#summary">Povzetek</a> | 
<a href="#testcase1">Rezultati</a> ]</div><div style="height: 30px"></div>
        <a name="testcase8"></a>
        <div style="border: 1px solid #D8D87E">
            <table class="tableRuntime tableCommon" style="width: 100%; border: 3px solid #FF9;">
                <tbody>
                    <tr>
                        <td colspan="2" style="background-color: #FF9; color: black;">Testni primer 8</td>
                    </tr>
                    <tr>
                        <td style="width: 200px;">Vhod</td>
                        <td class="texttt">
                            <br/>
<span class="rwordb">import</span> java.util.*;<br/>
<br/>
<span class="rwordv">public</span> <span class="rwordv">class</span> Test08 {<br/>
<br/>
<tab><span class="rwordv">public</span> <span class="rwordv">static</span> <span class="rwordv">void</span> main(String[] args) {<br/>
<br/>
<tab><tab>Map<String, Set<String>> sinonimi = <span class="rwordb">new</span> HashMap<>();<br/>
<tab><tab>sinonimi.put(<span class="niz">"pm"</span>, Set.of(<span class="niz">"pm"</span>, <span class="niz">"dgdio"</span>, <span class="niz">"chmx"</span>, <span class="niz">"ztiv"</span>, <span class="niz">"dw"</span>, <span class="niz">"owfr"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"dgdio"</span>, Set.of(<span class="niz">"pm"</span>, <span class="niz">"dgdio"</span>, <span class="niz">"chmx"</span>, <span class="niz">"ztiv"</span>, <span class="niz">"dw"</span>, <span class="niz">"owfr"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"chmx"</span>, Set.of(<span class="niz">"pm"</span>, <span class="niz">"dgdio"</span>, <span class="niz">"chmx"</span>, <span class="niz">"ztiv"</span>, <span class="niz">"dw"</span>, <span class="niz">"owfr"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"ztiv"</span>, Set.of(<span class="niz">"pm"</span>, <span class="niz">"dgdio"</span>, <span class="niz">"chmx"</span>, <span class="niz">"ztiv"</span>, <span class="niz">"dw"</span>, <span class="niz">"owfr"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"dw"</span>, Set.of(<span class="niz">"pm"</span>, <span class="niz">"dgdio"</span>, <span class="niz">"chmx"</span>, <span class="niz">"ztiv"</span>, <span class="niz">"dw"</span>, <span class="niz">"owfr"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"owfr"</span>, Set.of(<span class="niz">"pm"</span>, <span class="niz">"dgdio"</span>, <span class="niz">"chmx"</span>, <span class="niz">"ztiv"</span>, <span class="niz">"dw"</span>, <span class="niz">"owfr"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"ie"</span>, Set.of(<span class="niz">"ie"</span>, <span class="niz">"zxxkp"</span>, <span class="niz">"eswqh"</span>, <span class="niz">"gs"</span>, <span class="niz">"jj"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"zxxkp"</span>, Set.of(<span class="niz">"ie"</span>, <span class="niz">"zxxkp"</span>, <span class="niz">"eswqh"</span>, <span class="niz">"gs"</span>, <span class="niz">"jj"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"eswqh"</span>, Set.of(<span class="niz">"ie"</span>, <span class="niz">"zxxkp"</span>, <span class="niz">"eswqh"</span>, <span class="niz">"gs"</span>, <span class="niz">"jj"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"gs"</span>, Set.of(<span class="niz">"ie"</span>, <span class="niz">"zxxkp"</span>, <span class="niz">"eswqh"</span>, <span class="niz">"gs"</span>, <span class="niz">"jj"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"jj"</span>, Set.of(<span class="niz">"ie"</span>, <span class="niz">"zxxkp"</span>, <span class="niz">"eswqh"</span>, <span class="niz">"gs"</span>, <span class="niz">"jj"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"j"</span>, Set.of(<span class="niz">"j"</span>, <span class="niz">"fn"</span>, <span class="niz">"qlpqf"</span>, <span class="niz">"c"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"fn"</span>, Set.of(<span class="niz">"j"</span>, <span class="niz">"fn"</span>, <span class="niz">"qlpqf"</span>, <span class="niz">"c"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"qlpqf"</span>, Set.of(<span class="niz">"j"</span>, <span class="niz">"fn"</span>, <span class="niz">"qlpqf"</span>, <span class="niz">"c"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"c"</span>, Set.of(<span class="niz">"j"</span>, <span class="niz">"fn"</span>, <span class="niz">"qlpqf"</span>, <span class="niz">"c"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"id"</span>, Set.of(<span class="niz">"id"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"zp"</span>, Set.of(<span class="niz">"zp"</span>, <span class="niz">"asvdo"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"asvdo"</span>, Set.of(<span class="niz">"zp"</span>, <span class="niz">"asvdo"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"fudl"</span>, Set.of(<span class="niz">"fudl"</span>, <span class="niz">"qr"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"qr"</span>, Set.of(<span class="niz">"fudl"</span>, <span class="niz">"qr"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"dcpx"</span>, Set.of(<span class="niz">"dcpx"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"whkc"</span>, Set.of(<span class="niz">"whkc"</span>, <span class="niz">"ynec"</span>, <span class="niz">"lq"</span>, <span class="niz">"oxd"</span>, <span class="niz">"mb"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"ynec"</span>, Set.of(<span class="niz">"whkc"</span>, <span class="niz">"ynec"</span>, <span class="niz">"lq"</span>, <span class="niz">"oxd"</span>, <span class="niz">"mb"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"lq"</span>, Set.of(<span class="niz">"whkc"</span>, <span class="niz">"ynec"</span>, <span class="niz">"lq"</span>, <span class="niz">"oxd"</span>, <span class="niz">"mb"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"oxd"</span>, Set.of(<span class="niz">"whkc"</span>, <span class="niz">"ynec"</span>, <span class="niz">"lq"</span>, <span class="niz">"oxd"</span>, <span class="niz">"mb"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"mb"</span>, Set.of(<span class="niz">"whkc"</span>, <span class="niz">"ynec"</span>, <span class="niz">"lq"</span>, <span class="niz">"oxd"</span>, <span class="niz">"mb"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"rn"</span>, Set.of(<span class="niz">"rn"</span>, <span class="niz">"mdj"</span>, <span class="niz">"jrb"</span>, <span class="niz">"mk"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"mdj"</span>, Set.of(<span class="niz">"rn"</span>, <span class="niz">"mdj"</span>, <span class="niz">"jrb"</span>, <span class="niz">"mk"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"jrb"</span>, Set.of(<span class="niz">"rn"</span>, <span class="niz">"mdj"</span>, <span class="niz">"jrb"</span>, <span class="niz">"mk"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"mk"</span>, Set.of(<span class="niz">"rn"</span>, <span class="niz">"mdj"</span>, <span class="niz">"jrb"</span>, <span class="niz">"mk"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"jqe"</span>, Set.of(<span class="niz">"jqe"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"eocjd"</span>, Set.of(<span class="niz">"eocjd"</span>, <span class="niz">"wmggt"</span>, <span class="niz">"xnkv"</span>, <span class="niz">"xg"</span>, <span class="niz">"ei"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"wmggt"</span>, Set.of(<span class="niz">"eocjd"</span>, <span class="niz">"wmggt"</span>, <span class="niz">"xnkv"</span>, <span class="niz">"xg"</span>, <span class="niz">"ei"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"xnkv"</span>, Set.of(<span class="niz">"eocjd"</span>, <span class="niz">"wmggt"</span>, <span class="niz">"xnkv"</span>, <span class="niz">"xg"</span>, <span class="niz">"ei"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"xg"</span>, Set.of(<span class="niz">"eocjd"</span>, <span class="niz">"wmggt"</span>, <span class="niz">"xnkv"</span>, <span class="niz">"xg"</span>, <span class="niz">"ei"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"ei"</span>, Set.of(<span class="niz">"eocjd"</span>, <span class="niz">"wmggt"</span>, <span class="niz">"xnkv"</span>, <span class="niz">"xg"</span>, <span class="niz">"ei"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"eb"</span>, Set.of(<span class="niz">"eb"</span>, <span class="niz">"h"</span>, <span class="niz">"jal"</span>, <span class="niz">"uaw"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"h"</span>, Set.of(<span class="niz">"eb"</span>, <span class="niz">"h"</span>, <span class="niz">"jal"</span>, <span class="niz">"uaw"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"jal"</span>, Set.of(<span class="niz">"eb"</span>, <span class="niz">"h"</span>, <span class="niz">"jal"</span>, <span class="niz">"uaw"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"uaw"</span>, Set.of(<span class="niz">"eb"</span>, <span class="niz">"h"</span>, <span class="niz">"jal"</span>, <span class="niz">"uaw"</span>));<br/>
<br/>
<tab><tab>Map<Set<String>, Integer> slovar = Cetrta.pogostost(<span class="niz">"xnkv emv ywjcf ydqx idm trzq n jrj jeen plwwq pful kf zhhrv it pxh ztiv tmowk wvd sa bi r jpy dsgd hgpoa cu rl isyi cu pm msv taef ut tmowk v zzbo rjc jal sdcx zly hzyn ze orkh ib wvxhd oa p fw rfep qzpb zqaso idm m fdl va uj plp fcldp zgloi ztiv zly fhet wmdbe vbmz i jj r uzki vjv eseh jhmfi panp ydqj l wrbsd cg chuz owfr lkmd xnln jwp fn fn ti he mux it ojme priu thpk wrbsd mbutt fxlx zuklv ad zu mux rjdfa zhhrv dcpx rfep agkvm bddxh bky ykybk vv qmmp woq ebnv fw x ek cqg mp rh eawi xhnh szg brj idm plwwq oe rqrt th ja qlpqf panp ay sapnw bbu km lwm e ja eq qa ghf nhvod cxzv ntxg fdl zqaso xkr wvd v hzyn d lkmd qr qlpqf hhnu xkr lnwy breuu zusev ti uaw kweh nqtl cxsyk gnpxe zesxi tup cni chmx ojme qb tlqp ptd cew brj k bn ut xzopt ay laoep bi xvilz xnkv ke qzpb hbt fw aya uzki mbutt jrb ko jdouj mbutt rjdfa wzf czng jz jwp xuv ospa drpon idm wl ojme fcldp tigvj mdj bcqg ku fk oxd bmf su ebx nzb mp usr bd vjv ywjcf ykybk lgqs tp x y dtqj oa la p mhjc az sghcz qm tup rsw fudt krze qll ay inru wfa ebx jdouj priu ezr zly nx kq mdj pm uduh asv<span class="rwordv">do</span> vjv srecl qb ke pful asv<span class="rwordv">do</span> jwp q lq ea xerf ioeax bcqg saf jal mfx gii cew posen ojbo lwm xfhqo dum srecl dp idbwl pdpb yu fxlx eb hgpoa wmggt szg ptsi ples eocjd whkc ie ccpvo sapnw a dkz ybw xnln zhhrv uqmeb s eswqh rfep th bcqg izu l bbu uvz brj rqvsw tm dcsp bpc lcxn mux de uvz jv cg asv<span class="rwordv">do</span> rgau wmdbe qzpb xkr eocjd xzopt gii ghf zuklv laoep qg goqqp trzq iy sjamc vbmz dcsp gnpxe lft g sdcx rau jr isyi hbt zxxkp bbu xm gs dsgd ynec ri oxd rsw dgf oxd lkrsk bet msv eawi hzrqh wvxhd nw md trzq id posen rsw hedpo p ss szg hwkfw cprr bn qh whkc e he tm gii foj or hzyn wh plwwq plwwq owfr ybw xhnh he fcldp jyg tp xvilz vbw orkh lkmd bqti goqqp mb sjamc ti hzyn hzlkn uduh xmx cg nqtl lkmd tcib zesxi tup uistv sapnw or laoep vza posen y xg wrc xm jrb zhhrv tabd kmgy fn cuvqs mp"</span>, sinonimi);<br/>
<tab><tab>List<String> seznam = <span class="rwordb">new</span> ArrayList<>();<br/>
<tab><tab><span class="rwordb">for</span> (Set<String> mnozica: slovar.keySet()) {<br/>
<tab><tab><tab>List<String> lstMnozica = <span class="rwordb">new</span> ArrayList<>(mnozica);<br/>
<tab><tab><tab>lstMnozica.sort(null);<br/>
<tab><tab><tab>seznam.add(String.format(<span class="niz">"%s -> %d"</span>, lstMnozica, slovar.get(mnozica)));<br/>
<tab><tab>}<br/>
<tab><tab>seznam.sort(null);<br/>
<tab><tab><span class="rwordb">for</span> (String s: seznam) {<br/>
<tab><tab><tab>System.out.println(s);<br/>
<tab><tab>}<br/>
<tab>}<br/>
}<br/>


<br/>
                        </td>
                    </tr>
                    <tr>
                        <td>Izhod programa</td>
                        <td class="texttt">
                            [xnkv]<br/>trzq&nbsp;->&nbsp;1<br/>tup&nbsp;->&nbsp;1<br/>qa&nbsp;->&nbsp;1<br/>qb&nbsp;->&nbsp;1<br/>xfhqo&nbsp;->&nbsp;1<br/>jal&nbsp;->&nbsp;1<br/>qg&nbsp;->&nbsp;1<br/>nzb&nbsp;->&nbsp;1<br/>qh&nbsp;->&nbsp;1<br/>inru&nbsp;->&nbsp;1<br/>brj&nbsp;->&nbsp;1<br/>jrb&nbsp;->&nbsp;1<br/>qm&nbsp;->&nbsp;1<br/>vza&nbsp;->&nbsp;1<br/>zgloi&nbsp;->&nbsp;1<br/>qr&nbsp;->&nbsp;1<br/>xmx&nbsp;->&nbsp;1<br/>jrj&nbsp;->&nbsp;1<br/>ad&nbsp;->&nbsp;1<br/>mhjc&nbsp;->&nbsp;1<br/>rau&nbsp;->&nbsp;1<br/>mbutt&nbsp;->&nbsp;1<br/>eocjd&nbsp;->&nbsp;1<br/>bbu&nbsp;->&nbsp;1<br/>rh&nbsp;->&nbsp;1<br/>ri&nbsp;->&nbsp;1<br/>ay&nbsp;->&nbsp;1<br/>bcqg&nbsp;->&nbsp;1<br/>az&nbsp;->&nbsp;1<br/>rl&nbsp;->&nbsp;1<br/>lft&nbsp;->&nbsp;1<br/>wmggt&nbsp;->&nbsp;1<br/>eawi&nbsp;->&nbsp;1<br/>bd&nbsp;->&nbsp;1<br/>dgf&nbsp;->&nbsp;1<br/>vjv&nbsp;->&nbsp;1<br/>lwm&nbsp;->&nbsp;1<br/>hzrqh&nbsp;->&nbsp;1<br/>srecl&nbsp;->&nbsp;1<br/>bi&nbsp;->&nbsp;1<br/>plwwq&nbsp;->&nbsp;1<br/>ydqx&nbsp;->&nbsp;1<br/>idbwl&nbsp;->&nbsp;1<br/>ynec&nbsp;->&nbsp;1<br/>bn&nbsp;->&nbsp;1<br/>sa&nbsp;->&nbsp;1<br/>lkrsk&nbsp;->&nbsp;1<br/>cew&nbsp;->&nbsp;1<br/>tigvj&nbsp;->&nbsp;1<br/>zhhrv&nbsp;->&nbsp;1<br/>rsw&nbsp;->&nbsp;1<br/>ydqj&nbsp;->&nbsp;1<br/>ezr&nbsp;->&nbsp;1<br/>czng&nbsp;->&nbsp;1<br/>cxzv&nbsp;->&nbsp;1<br/>ss&nbsp;->&nbsp;1<br/>a&nbsp;->&nbsp;1<br/>su&nbsp;->&nbsp;1<br/>cg&nbsp;->&nbsp;1<br/>d&nbsp;->&nbsp;1<br/>e&nbsp;->&nbsp;1<br/>g&nbsp;->&nbsp;1<br/>i&nbsp;->&nbsp;1<br/>k&nbsp;->&nbsp;1<br/>l&nbsp;->&nbsp;1<br/>m&nbsp;->&nbsp;1<br/>n&nbsp;->&nbsp;1<br/>p&nbsp;->&nbsp;1<br/>q&nbsp;->&nbsp;1<br/>r&nbsp;->&nbsp;1<br/>cu&nbsp;->&nbsp;1<br/>s&nbsp;->&nbsp;1<br/>th&nbsp;->&nbsp;1<br/>ti&nbsp;->&nbsp;1<br/>v&nbsp;->&nbsp;1<br/>x&nbsp;->&nbsp;1<br/>y&nbsp;->&nbsp;1<br/>tm&nbsp;->&nbsp;1<br/>tp&nbsp;->&nbsp;1<br/>owfr&nbsp;->&nbsp;1<br/>de&nbsp;->&nbsp;1<br/>dtqj&nbsp;->&nbsp;1<br/>sjamc&nbsp;->&nbsp;1<br/>ojme&nbsp;->&nbsp;1<br/>qmmp&nbsp;->&nbsp;1<br/>dp&nbsp;->&nbsp;1<br/>ywjcf&nbsp;->&nbsp;1<br/>sghcz&nbsp;->&nbsp;1<br/>ybw&nbsp;->&nbsp;1<br/>bet&nbsp;->&nbsp;1<br/>xhnh&nbsp;->&nbsp;1<br/>uj&nbsp;->&nbsp;1<br/>woq&nbsp;->&nbsp;1<br/>priu&nbsp;->&nbsp;1<br/>ea&nbsp;->&nbsp;1<br/>eb&nbsp;->&nbsp;1<br/>ut&nbsp;->&nbsp;1<br/>rjdfa&nbsp;->&nbsp;1<br/>lcxn&nbsp;->&nbsp;1<br/>tlqp&nbsp;->&nbsp;1<br/>xzopt&nbsp;->&nbsp;1<br/>eswqh&nbsp;->&nbsp;1<br/>ek&nbsp;->&nbsp;1<br/>va&nbsp;->&nbsp;1<br/>eq&nbsp;->&nbsp;1<br/>hedpo&nbsp;->&nbsp;1<br/>idm&nbsp;->&nbsp;1<br/>sdcx&nbsp;->&nbsp;1<br/>orkh&nbsp;->&nbsp;1<br/>drpon&nbsp;->&nbsp;1<br/>hbt&nbsp;->&nbsp;1<br/>xnln&nbsp;->&nbsp;1<br/>vv&nbsp;->&nbsp;1<br/>rqvsw&nbsp;->&nbsp;1<br/>foj&nbsp;->&nbsp;1<br/>jwp&nbsp;->&nbsp;1<br/>fk&nbsp;->&nbsp;1<br/>fn&nbsp;->&nbsp;1<br/>gnpxe&nbsp;->&nbsp;1<br/>cuvqs&nbsp;->&nbsp;1<br/>emv&nbsp;->&nbsp;1<br/>fw&nbsp;->&nbsp;1<br/>wh&nbsp;->&nbsp;1<br/>pdpb&nbsp;->&nbsp;1<br/>dkz&nbsp;->&nbsp;1<br/>wl&nbsp;->&nbsp;1<br/>xnkv&nbsp;->&nbsp;1<br/>fhet&nbsp;->&nbsp;1<br/>krze&nbsp;->&nbsp;1<br/>szg&nbsp;->&nbsp;1<br/>qlpqf&nbsp;->&nbsp;1<br/>ptd&nbsp;->&nbsp;1<br/>ospa&nbsp;->&nbsp;1<br/>dcpx&nbsp;->&nbsp;1<br/>wrc&nbsp;->&nbsp;1<br/>ykybk&nbsp;->&nbsp;1<br/>gs&nbsp;->&nbsp;1<br/>nhvod&nbsp;->&nbsp;1<br/>breuu&nbsp;->&nbsp;1<br/>lgqs&nbsp;->&nbsp;1<br/>xg&nbsp;->&nbsp;1<br/>wvxhd&nbsp;->&nbsp;1<br/>uzki&nbsp;->&nbsp;1<br/>zuklv&nbsp;->&nbsp;1<br/>rqrt&nbsp;->&nbsp;1<br/>xm&nbsp;->&nbsp;1<br/>hhnu&nbsp;->&nbsp;1<br/>jyg&nbsp;->&nbsp;1<br/>hwkfw&nbsp;->&nbsp;1<br/>he&nbsp;->&nbsp;1<br/>chmx&nbsp;->&nbsp;1<br/>tmowk&nbsp;->&nbsp;1<br/>ntxg&nbsp;->&nbsp;1<br/>hgpoa&nbsp;->&nbsp;1<br/>zqaso&nbsp;->&nbsp;1<br/>ebnv&nbsp;->&nbsp;1<br/>uqmeb&nbsp;->&nbsp;1<br/>jeen&nbsp;->&nbsp;1<br/>xuv&nbsp;->&nbsp;1<br/>ib&nbsp;->&nbsp;1<br/>id&nbsp;->&nbsp;1<br/>yu&nbsp;->&nbsp;1<br/>ie&nbsp;->&nbsp;1<br/>rgau&nbsp;->&nbsp;1<br/>aya&nbsp;->&nbsp;1<br/>rjc&nbsp;->&nbsp;1<br/>bqti&nbsp;->&nbsp;1<br/>it&nbsp;->&nbsp;1<br/>ze&nbsp;->&nbsp;1<br/>xvilz&nbsp;->&nbsp;1<br/>iy&nbsp;->&nbsp;1<br/>zxxkp&nbsp;->&nbsp;1<br/>dcsp&nbsp;->&nbsp;1<br/>ja&nbsp;->&nbsp;1<br/>pful&nbsp;->&nbsp;1<br/>zu&nbsp;->&nbsp;1<br/>kweh&nbsp;->&nbsp;1<br/>jj&nbsp;->&nbsp;1<br/>bddxh&nbsp;->&nbsp;1<br/>cprr&nbsp;->&nbsp;1<br/>panp&nbsp;->&nbsp;1<br/>nqtl&nbsp;->&nbsp;1<br/>jr&nbsp;->&nbsp;1<br/>vbw&nbsp;->&nbsp;1<br/>jv&nbsp;->&nbsp;1<br/>jz&nbsp;->&nbsp;1<br/>bky&nbsp;->&nbsp;1<br/>uduh&nbsp;->&nbsp;1<br/>thpk&nbsp;->&nbsp;1<br/>tabd&nbsp;->&nbsp;1<br/>ke&nbsp;->&nbsp;1<br/>kf&nbsp;->&nbsp;1<br/>ojbo&nbsp;->&nbsp;1<br/>cni&nbsp;->&nbsp;1<br/>pxh&nbsp;->&nbsp;1<br/>km&nbsp;->&nbsp;1<br/>wvd&nbsp;->&nbsp;1<br/>lkmd&nbsp;->&nbsp;1<br/>ko&nbsp;->&nbsp;1<br/>izu&nbsp;->&nbsp;1<br/>kq&nbsp;->&nbsp;1<br/>ccpvo&nbsp;->&nbsp;1<br/>uaw&nbsp;->&nbsp;1<br/>ku&nbsp;->&nbsp;1<br/>vbmz&nbsp;->&nbsp;1<br/>ptsi&nbsp;->&nbsp;1<br/>fdl&nbsp;->&nbsp;1<br/>wfa&nbsp;->&nbsp;1<br/>la&nbsp;->&nbsp;1<br/>bmf&nbsp;->&nbsp;1<br/>ebx&nbsp;->&nbsp;1<br/>zesxi&nbsp;->&nbsp;1<br/>dsgd&nbsp;->&nbsp;1<br/>asvdo&nbsp;->&nbsp;1<br/>uistv&nbsp;->&nbsp;1<br/>lq&nbsp;->&nbsp;1<br/>zly&nbsp;->&nbsp;1<br/>isyi&nbsp;->&nbsp;1<br/>ioeax&nbsp;->&nbsp;1<br/>hzlkn&nbsp;->&nbsp;1<br/>msv&nbsp;->&nbsp;1<br/>usr&nbsp;->&nbsp;1<br/>mb&nbsp;->&nbsp;1<br/>hzyn&nbsp;->&nbsp;1<br/>md&nbsp;->&nbsp;1<br/>oxd&nbsp;->&nbsp;1<br/>cxsyk&nbsp;->&nbsp;1<br/>ples&nbsp;->&nbsp;1<br/>mp&nbsp;->&nbsp;1<br/>posen&nbsp;->&nbsp;1<br/>ghf&nbsp;->&nbsp;1<br/>zusev&nbsp;->&nbsp;1<br/>sapnw&nbsp;->&nbsp;1<br/>wmdbe&nbsp;->&nbsp;1<br/>fudt&nbsp;->&nbsp;1<br/>qll&nbsp;->&nbsp;1<br/>mdj&nbsp;->&nbsp;1<br/>zzbo&nbsp;->&nbsp;1<br/>goqqp&nbsp;->&nbsp;1<br/>cqg&nbsp;->&nbsp;1<br/>wrbsd&nbsp;->&nbsp;1<br/>gii&nbsp;->&nbsp;1<br/>nw&nbsp;->&nbsp;1<br/>nx&nbsp;->&nbsp;1<br/>jdouj&nbsp;->&nbsp;1<br/>mux&nbsp;->&nbsp;1<br/>oa&nbsp;->&nbsp;1<br/>bpc&nbsp;->&nbsp;1<br/>oe&nbsp;->&nbsp;1<br/>lnwy&nbsp;->&nbsp;1<br/>fcldp&nbsp;->&nbsp;1<br/>xerf&nbsp;->&nbsp;1<br/>saf&nbsp;->&nbsp;1<br/>laoep&nbsp;->&nbsp;1<br/>ztiv&nbsp;->&nbsp;1<br/>xkr&nbsp;->&nbsp;1<br/>whkc&nbsp;->&nbsp;1<br/>wzf&nbsp;->&nbsp;1<br/>or&nbsp;->&nbsp;1<br/>chuz&nbsp;->&nbsp;1<br/>kmgy&nbsp;->&nbsp;1<br/>rfep&nbsp;->&nbsp;1<br/>qzpb&nbsp;->&nbsp;1<br/>fxlx&nbsp;->&nbsp;1<br/>jpy&nbsp;->&nbsp;1<br/>jhmfi&nbsp;->&nbsp;1<br/>plp&nbsp;->&nbsp;1<br/>taef&nbsp;->&nbsp;1<br/>uvz&nbsp;->&nbsp;1<br/>agkvm&nbsp;->&nbsp;1<br/>pm&nbsp;->&nbsp;1<br/>dum&nbsp;->&nbsp;1<br/>eseh&nbsp;->&nbsp;1<br/>mfx&nbsp;->&nbsp;1<br/>tcib&nbsp;->&nbsp;1<br/>Exception&nbsp;in&nbsp;thread&nbsp;"main"&nbsp;java.lang.NullPointerException:&nbsp;Cannot&nbsp;invoke&nbsp;"java.util.Map.keySet()"&nbsp;because&nbsp;"<local2>"&nbsp;is&nbsp;null<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;Test08.main(Test08.java:52)<br/><br/>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div style="height: 15px"></div>
<div style="font-size: 0.8em;">[ <a href="#top">&uparrow;</a> | <a href="#bottom">&downarrow;</a> | 
<a href="#summary">Povzetek</a> | 
<a href="#testcase1">Rezultati</a> ]</div><div style="height: 30px"></div>
        <a name="testcase9"></a>
        <div style="border: 1px solid #D8D87E">
            <table class="tableRuntime tableCommon" style="width: 100%; border: 3px solid #FF9;">
                <tbody>
                    <tr>
                        <td colspan="2" style="background-color: #FF9; color: black;">Testni primer 9</td>
                    </tr>
                    <tr>
                        <td style="width: 200px;">Vhod</td>
                        <td class="texttt">
                            <br/>
<span class="rwordb">import</span> java.util.*;<br/>
<br/>
<span class="rwordv">public</span> <span class="rwordv">class</span> Test09 {<br/>
<br/>
<tab><span class="rwordv">public</span> <span class="rwordv">static</span> <span class="rwordv">void</span> main(String[] args) {<br/>
<br/>
<tab><tab>Map<String, Set<String>> sinonimi = <span class="rwordb">new</span> HashMap<>();<br/>
<tab><tab>sinonimi.put(<span class="niz">"zdee"</span>, Set.of(<span class="niz">"zdee"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"gknc"</span>, Set.of(<span class="niz">"gknc"</span>, <span class="niz">"sgo"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"sgo"</span>, Set.of(<span class="niz">"gknc"</span>, <span class="niz">"sgo"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"rf"</span>, Set.of(<span class="niz">"rf"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"fsw"</span>, Set.of(<span class="niz">"fsw"</span>, <span class="niz">"np"</span>, <span class="niz">"ieo"</span>, <span class="niz">"oqvny"</span>, <span class="niz">"uvmv"</span>, <span class="niz">"j"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"np"</span>, Set.of(<span class="niz">"fsw"</span>, <span class="niz">"np"</span>, <span class="niz">"ieo"</span>, <span class="niz">"oqvny"</span>, <span class="niz">"uvmv"</span>, <span class="niz">"j"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"ieo"</span>, Set.of(<span class="niz">"fsw"</span>, <span class="niz">"np"</span>, <span class="niz">"ieo"</span>, <span class="niz">"oqvny"</span>, <span class="niz">"uvmv"</span>, <span class="niz">"j"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"oqvny"</span>, Set.of(<span class="niz">"fsw"</span>, <span class="niz">"np"</span>, <span class="niz">"ieo"</span>, <span class="niz">"oqvny"</span>, <span class="niz">"uvmv"</span>, <span class="niz">"j"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"uvmv"</span>, Set.of(<span class="niz">"fsw"</span>, <span class="niz">"np"</span>, <span class="niz">"ieo"</span>, <span class="niz">"oqvny"</span>, <span class="niz">"uvmv"</span>, <span class="niz">"j"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"j"</span>, Set.of(<span class="niz">"fsw"</span>, <span class="niz">"np"</span>, <span class="niz">"ieo"</span>, <span class="niz">"oqvny"</span>, <span class="niz">"uvmv"</span>, <span class="niz">"j"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"mtxeu"</span>, Set.of(<span class="niz">"mtxeu"</span>, <span class="niz">"fezm"</span>, <span class="niz">"mfqkx"</span>, <span class="niz">"aazsl"</span>, <span class="niz">"rb"</span>, <span class="niz">"tgf"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"fezm"</span>, Set.of(<span class="niz">"mtxeu"</span>, <span class="niz">"fezm"</span>, <span class="niz">"mfqkx"</span>, <span class="niz">"aazsl"</span>, <span class="niz">"rb"</span>, <span class="niz">"tgf"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"mfqkx"</span>, Set.of(<span class="niz">"mtxeu"</span>, <span class="niz">"fezm"</span>, <span class="niz">"mfqkx"</span>, <span class="niz">"aazsl"</span>, <span class="niz">"rb"</span>, <span class="niz">"tgf"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"aazsl"</span>, Set.of(<span class="niz">"mtxeu"</span>, <span class="niz">"fezm"</span>, <span class="niz">"mfqkx"</span>, <span class="niz">"aazsl"</span>, <span class="niz">"rb"</span>, <span class="niz">"tgf"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"rb"</span>, Set.of(<span class="niz">"mtxeu"</span>, <span class="niz">"fezm"</span>, <span class="niz">"mfqkx"</span>, <span class="niz">"aazsl"</span>, <span class="niz">"rb"</span>, <span class="niz">"tgf"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"tgf"</span>, Set.of(<span class="niz">"mtxeu"</span>, <span class="niz">"fezm"</span>, <span class="niz">"mfqkx"</span>, <span class="niz">"aazsl"</span>, <span class="niz">"rb"</span>, <span class="niz">"tgf"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"ohxu"</span>, Set.of(<span class="niz">"ohxu"</span>, <span class="niz">"crshe"</span>, <span class="niz">"ida"</span>, <span class="niz">"ho"</span>, <span class="niz">"cqbu"</span>, <span class="niz">"e"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"crshe"</span>, Set.of(<span class="niz">"ohxu"</span>, <span class="niz">"crshe"</span>, <span class="niz">"ida"</span>, <span class="niz">"ho"</span>, <span class="niz">"cqbu"</span>, <span class="niz">"e"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"ida"</span>, Set.of(<span class="niz">"ohxu"</span>, <span class="niz">"crshe"</span>, <span class="niz">"ida"</span>, <span class="niz">"ho"</span>, <span class="niz">"cqbu"</span>, <span class="niz">"e"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"ho"</span>, Set.of(<span class="niz">"ohxu"</span>, <span class="niz">"crshe"</span>, <span class="niz">"ida"</span>, <span class="niz">"ho"</span>, <span class="niz">"cqbu"</span>, <span class="niz">"e"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"cqbu"</span>, Set.of(<span class="niz">"ohxu"</span>, <span class="niz">"crshe"</span>, <span class="niz">"ida"</span>, <span class="niz">"ho"</span>, <span class="niz">"cqbu"</span>, <span class="niz">"e"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"e"</span>, Set.of(<span class="niz">"ohxu"</span>, <span class="niz">"crshe"</span>, <span class="niz">"ida"</span>, <span class="niz">"ho"</span>, <span class="niz">"cqbu"</span>, <span class="niz">"e"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"vkyn"</span>, Set.of(<span class="niz">"vkyn"</span>, <span class="niz">"bk"</span>, <span class="niz">"vzv"</span>, <span class="niz">"ucve"</span>, <span class="niz">"aocv"</span>, <span class="niz">"ugrca"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"bk"</span>, Set.of(<span class="niz">"vkyn"</span>, <span class="niz">"bk"</span>, <span class="niz">"vzv"</span>, <span class="niz">"ucve"</span>, <span class="niz">"aocv"</span>, <span class="niz">"ugrca"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"vzv"</span>, Set.of(<span class="niz">"vkyn"</span>, <span class="niz">"bk"</span>, <span class="niz">"vzv"</span>, <span class="niz">"ucve"</span>, <span class="niz">"aocv"</span>, <span class="niz">"ugrca"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"ucve"</span>, Set.of(<span class="niz">"vkyn"</span>, <span class="niz">"bk"</span>, <span class="niz">"vzv"</span>, <span class="niz">"ucve"</span>, <span class="niz">"aocv"</span>, <span class="niz">"ugrca"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"aocv"</span>, Set.of(<span class="niz">"vkyn"</span>, <span class="niz">"bk"</span>, <span class="niz">"vzv"</span>, <span class="niz">"ucve"</span>, <span class="niz">"aocv"</span>, <span class="niz">"ugrca"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"ugrca"</span>, Set.of(<span class="niz">"vkyn"</span>, <span class="niz">"bk"</span>, <span class="niz">"vzv"</span>, <span class="niz">"ucve"</span>, <span class="niz">"aocv"</span>, <span class="niz">"ugrca"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"jrtv"</span>, Set.of(<span class="niz">"jrtv"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"his"</span>, Set.of(<span class="niz">"his"</span>, <span class="niz">"md"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"md"</span>, Set.of(<span class="niz">"his"</span>, <span class="niz">"md"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"ofe"</span>, Set.of(<span class="niz">"ofe"</span>, <span class="niz">"if"</span>, <span class="niz">"zj"</span>, <span class="niz">"csyng"</span>, <span class="niz">"zzdu"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"if"</span>, Set.of(<span class="niz">"ofe"</span>, <span class="niz">"if"</span>, <span class="niz">"zj"</span>, <span class="niz">"csyng"</span>, <span class="niz">"zzdu"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"zj"</span>, Set.of(<span class="niz">"ofe"</span>, <span class="niz">"if"</span>, <span class="niz">"zj"</span>, <span class="niz">"csyng"</span>, <span class="niz">"zzdu"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"csyng"</span>, Set.of(<span class="niz">"ofe"</span>, <span class="niz">"if"</span>, <span class="niz">"zj"</span>, <span class="niz">"csyng"</span>, <span class="niz">"zzdu"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"zzdu"</span>, Set.of(<span class="niz">"ofe"</span>, <span class="niz">"if"</span>, <span class="niz">"zj"</span>, <span class="niz">"csyng"</span>, <span class="niz">"zzdu"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"hlusi"</span>, Set.of(<span class="niz">"hlusi"</span>, <span class="niz">"co"</span>, <span class="niz">"k"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"co"</span>, Set.of(<span class="niz">"hlusi"</span>, <span class="niz">"co"</span>, <span class="niz">"k"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"k"</span>, Set.of(<span class="niz">"hlusi"</span>, <span class="niz">"co"</span>, <span class="niz">"k"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"smc"</span>, Set.of(<span class="niz">"smc"</span>, <span class="niz">"vx"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"vx"</span>, Set.of(<span class="niz">"smc"</span>, <span class="niz">"vx"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"guvt"</span>, Set.of(<span class="niz">"guvt"</span>, <span class="niz">"uba"</span>, <span class="niz">"zfrq"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"uba"</span>, Set.of(<span class="niz">"guvt"</span>, <span class="niz">"uba"</span>, <span class="niz">"zfrq"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"zfrq"</span>, Set.of(<span class="niz">"guvt"</span>, <span class="niz">"uba"</span>, <span class="niz">"zfrq"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"osrnt"</span>, Set.of(<span class="niz">"osrnt"</span>, <span class="niz">"jpiqu"</span>, <span class="niz">"uhr"</span>, <span class="niz">"je"</span>, <span class="niz">"ajb"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"jpiqu"</span>, Set.of(<span class="niz">"osrnt"</span>, <span class="niz">"jpiqu"</span>, <span class="niz">"uhr"</span>, <span class="niz">"je"</span>, <span class="niz">"ajb"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"uhr"</span>, Set.of(<span class="niz">"osrnt"</span>, <span class="niz">"jpiqu"</span>, <span class="niz">"uhr"</span>, <span class="niz">"je"</span>, <span class="niz">"ajb"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"je"</span>, Set.of(<span class="niz">"osrnt"</span>, <span class="niz">"jpiqu"</span>, <span class="niz">"uhr"</span>, <span class="niz">"je"</span>, <span class="niz">"ajb"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"ajb"</span>, Set.of(<span class="niz">"osrnt"</span>, <span class="niz">"jpiqu"</span>, <span class="niz">"uhr"</span>, <span class="niz">"je"</span>, <span class="niz">"ajb"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"rs"</span>, Set.of(<span class="niz">"rs"</span>, <span class="niz">"uxxe"</span>, <span class="niz">"jsd"</span>, <span class="niz">"mqnn"</span>, <span class="niz">"zwl"</span>, <span class="niz">"mhf"</span>, <span class="niz">"ka"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"uxxe"</span>, Set.of(<span class="niz">"rs"</span>, <span class="niz">"uxxe"</span>, <span class="niz">"jsd"</span>, <span class="niz">"mqnn"</span>, <span class="niz">"zwl"</span>, <span class="niz">"mhf"</span>, <span class="niz">"ka"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"jsd"</span>, Set.of(<span class="niz">"rs"</span>, <span class="niz">"uxxe"</span>, <span class="niz">"jsd"</span>, <span class="niz">"mqnn"</span>, <span class="niz">"zwl"</span>, <span class="niz">"mhf"</span>, <span class="niz">"ka"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"mqnn"</span>, Set.of(<span class="niz">"rs"</span>, <span class="niz">"uxxe"</span>, <span class="niz">"jsd"</span>, <span class="niz">"mqnn"</span>, <span class="niz">"zwl"</span>, <span class="niz">"mhf"</span>, <span class="niz">"ka"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"zwl"</span>, Set.of(<span class="niz">"rs"</span>, <span class="niz">"uxxe"</span>, <span class="niz">"jsd"</span>, <span class="niz">"mqnn"</span>, <span class="niz">"zwl"</span>, <span class="niz">"mhf"</span>, <span class="niz">"ka"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"mhf"</span>, Set.of(<span class="niz">"rs"</span>, <span class="niz">"uxxe"</span>, <span class="niz">"jsd"</span>, <span class="niz">"mqnn"</span>, <span class="niz">"zwl"</span>, <span class="niz">"mhf"</span>, <span class="niz">"ka"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"ka"</span>, Set.of(<span class="niz">"rs"</span>, <span class="niz">"uxxe"</span>, <span class="niz">"jsd"</span>, <span class="niz">"mqnn"</span>, <span class="niz">"zwl"</span>, <span class="niz">"mhf"</span>, <span class="niz">"ka"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"nesf"</span>, Set.of(<span class="niz">"nesf"</span>, <span class="niz">"phkk"</span>, <span class="niz">"axzf"</span>, <span class="niz">"du"</span>, <span class="niz">"ath"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"phkk"</span>, Set.of(<span class="niz">"nesf"</span>, <span class="niz">"phkk"</span>, <span class="niz">"axzf"</span>, <span class="niz">"du"</span>, <span class="niz">"ath"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"axzf"</span>, Set.of(<span class="niz">"nesf"</span>, <span class="niz">"phkk"</span>, <span class="niz">"axzf"</span>, <span class="niz">"du"</span>, <span class="niz">"ath"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"du"</span>, Set.of(<span class="niz">"nesf"</span>, <span class="niz">"phkk"</span>, <span class="niz">"axzf"</span>, <span class="niz">"du"</span>, <span class="niz">"ath"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"ath"</span>, Set.of(<span class="niz">"nesf"</span>, <span class="niz">"phkk"</span>, <span class="niz">"axzf"</span>, <span class="niz">"du"</span>, <span class="niz">"ath"</span>));<br/>
<br/>
<tab><tab>Map<Set<String>, Integer> slovar = Cetrta.pogostost(<span class="niz">"mqnn o qbtcp reh gik tx yxd q rcg qbwya czt mekrv kojfn oqvny dbsjn co zprb sgo uxsm syzy xct kvpmu iflw kxm lw ldmh j zegce bay hxsl ow nqml bhd ljr dqsqz bsszg ljr ot jzw dm aocv jlmyr mbdia dyox afdg mz mbdia zz hsgos vn a xyo hwlo cpvh ymlbf md km nvguk b qbtcp tsyxa eho axxgq mo jisqp mbdia qsn cxh dc vx ftj li abvee pj vhuvb om cpvh bk u mspks lyvbj gknc tx xcowl nm bk vh zl fat yvi ui gkh li dqsqz uici nqml uxxe vq so ndhwo reh npbp vkyn zbtxt vmh kkx iuze rk hmkl zcmky b nxn fsw nb vp nctnz kt axxgq ryvo lyvbj phkk pzcvg jrtv mp hmwnc txlzz pr ldmh nu eho xpzed dhify cnl wbzr jhwoi co cba vhwqo hmkl cxh pr qmv sj zfrq nesf zwl xjgu dbr atbk nfm nnris rk zfrq xv zb zva axxgq cxl t jvy pkg dbr vhbz ldmh zji ajb ocvyw xcmem xw s lab htjyi cfslc oz aocv honu ptu kzgar wqfk reh rwng gody mfqkx lu l qsk cdofh akf <span class="rwordb">if</span> ui jop nesf aoe rv irjol p zzdu zenvl mbvp muuj dhify yvi dbsjn zwl lni abvee ho npbp jsfsk grun vln oz mspks crjr vhwqo crjr dhify vh owks siz lni onvcg tamus xdw odh ebmxq yjxr zegce tgf yjxr wbzr gxsh wc lp dwgpy xcmem lubrt mbvp ieo n r vx ndhwo mr cxl qgrve kzgar awk kt dceru csm hlusi jwuho uxxe kojfn np dh qsk mfqkx uhs hfxqy htjyi gq jpiqu lp hsgos sj ryvo zwl csyng tamus cxl qem ldmh xcjq tsyxa tdki xjgu zr qh fxme nesf ijiw spi l hommm ajb r atbk hsgos cau so oyat jrtv xky erxnl dm f awk ay hxsl uvmv bi sy ns tw dbr cnl yk ya uklwc tdki pqea reh"</span>, sinonimi);<br/>
<tab><tab>List<String> seznam = <span class="rwordb">new</span> ArrayList<>();<br/>
<tab><tab><span class="rwordb">for</span> (Set<String> mnozica: slovar.keySet()) {<br/>
<tab><tab><tab>List<String> lstMnozica = <span class="rwordb">new</span> ArrayList<>(mnozica);<br/>
<tab><tab><tab>lstMnozica.sort(null);<br/>
<tab><tab><tab>seznam.add(String.format(<span class="niz">"%s -> %d"</span>, lstMnozica, slovar.get(mnozica)));<br/>
<tab><tab>}<br/>
<tab><tab>seznam.sort(null);<br/>
<tab><tab><span class="rwordb">for</span> (String s: seznam) {<br/>
<tab><tab><tab>System.out.println(s);<br/>
<tab><tab>}<br/>
<tab>}<br/>
}<br/>


<br/>
                        </td>
                    </tr>
                    <tr>
                        <td>Izhod programa</td>
                        <td class="texttt">
                            [mqnn]<br/>pr&nbsp;->&nbsp;1<br/>irjol&nbsp;->&nbsp;1<br/>gkh&nbsp;->&nbsp;1<br/>uxsm&nbsp;->&nbsp;1<br/>muuj&nbsp;->&nbsp;1<br/>syzy&nbsp;->&nbsp;1<br/>dbsjn&nbsp;->&nbsp;1<br/>qh&nbsp;->&nbsp;1<br/>bay&nbsp;->&nbsp;1<br/>csyng&nbsp;->&nbsp;1<br/>eho&nbsp;->&nbsp;1<br/>nvguk&nbsp;->&nbsp;1<br/>jisqp&nbsp;->&nbsp;1<br/>zcmky&nbsp;->&nbsp;1<br/>ay&nbsp;->&nbsp;1<br/>rk&nbsp;->&nbsp;1<br/>uvmv&nbsp;->&nbsp;1<br/>ijiw&nbsp;->&nbsp;1<br/>uhs&nbsp;->&nbsp;1<br/>axxgq&nbsp;->&nbsp;1<br/>cfslc&nbsp;->&nbsp;1<br/>rv&nbsp;->&nbsp;1<br/>mspks&nbsp;->&nbsp;1<br/>bi&nbsp;->&nbsp;1<br/>bk&nbsp;->&nbsp;1<br/>dhify&nbsp;->&nbsp;1<br/>vhwqo&nbsp;->&nbsp;1<br/>hsgos&nbsp;->&nbsp;1<br/>abvee&nbsp;->&nbsp;1<br/>zfrq&nbsp;->&nbsp;1<br/>tgf&nbsp;->&nbsp;1<br/>qbtcp&nbsp;->&nbsp;1<br/>mqnn&nbsp;->&nbsp;1<br/>rcg&nbsp;->&nbsp;1<br/>sj&nbsp;->&nbsp;1<br/>so&nbsp;->&nbsp;1<br/>a&nbsp;->&nbsp;1<br/>b&nbsp;->&nbsp;1<br/>f&nbsp;->&nbsp;1<br/>sy&nbsp;->&nbsp;1<br/>qbwya&nbsp;->&nbsp;1<br/>pzcvg&nbsp;->&nbsp;1<br/>pqea&nbsp;->&nbsp;1<br/>j&nbsp;->&nbsp;1<br/>co&nbsp;->&nbsp;1<br/>l&nbsp;->&nbsp;1<br/>xpzed&nbsp;->&nbsp;1<br/>n&nbsp;->&nbsp;1<br/>o&nbsp;->&nbsp;1<br/>xcowl&nbsp;->&nbsp;1<br/>p&nbsp;->&nbsp;1<br/>q&nbsp;->&nbsp;1<br/>r&nbsp;->&nbsp;1<br/>s&nbsp;->&nbsp;1<br/>t&nbsp;->&nbsp;1<br/>u&nbsp;->&nbsp;1<br/>nesf&nbsp;->&nbsp;1<br/>vln&nbsp;->&nbsp;1<br/>dc&nbsp;->&nbsp;1<br/>zenvl&nbsp;->&nbsp;1<br/>tw&nbsp;->&nbsp;1<br/>tx&nbsp;->&nbsp;1<br/>dh&nbsp;->&nbsp;1<br/>dwgpy&nbsp;->&nbsp;1<br/>qsk&nbsp;->&nbsp;1<br/>dm&nbsp;->&nbsp;1<br/>rwng&nbsp;->&nbsp;1<br/>qsn&nbsp;->&nbsp;1<br/>vmh&nbsp;->&nbsp;1<br/>nqml&nbsp;->&nbsp;1<br/>cxh&nbsp;->&nbsp;1<br/>reh&nbsp;->&nbsp;1<br/>ui&nbsp;->&nbsp;1<br/>jhwoi&nbsp;->&nbsp;1<br/>cxl&nbsp;->&nbsp;1<br/>sgo&nbsp;->&nbsp;1<br/>kxm&nbsp;->&nbsp;1<br/>qgrve&nbsp;->&nbsp;1<br/>zva&nbsp;->&nbsp;1<br/>hmwnc&nbsp;->&nbsp;1<br/>jvy&nbsp;->&nbsp;1<br/>zbtxt&nbsp;->&nbsp;1<br/>tamus&nbsp;->&nbsp;1<br/>vh&nbsp;->&nbsp;1<br/>ljr&nbsp;->&nbsp;1<br/>vn&nbsp;->&nbsp;1<br/>vp&nbsp;->&nbsp;1<br/>lyvbj&nbsp;->&nbsp;1<br/>vq&nbsp;->&nbsp;1<br/>vkyn&nbsp;->&nbsp;1<br/>vhbz&nbsp;->&nbsp;1<br/>ymlbf&nbsp;->&nbsp;1<br/>vx&nbsp;->&nbsp;1<br/>wc&nbsp;->&nbsp;1<br/>zwl&nbsp;->&nbsp;1<br/>cdofh&nbsp;->&nbsp;1<br/>ieo&nbsp;->&nbsp;1<br/>kvpmu&nbsp;->&nbsp;1<br/>qem&nbsp;->&nbsp;1<br/>kojfn&nbsp;->&nbsp;1<br/>tsyxa&nbsp;->&nbsp;1<br/>czt&nbsp;->&nbsp;1<br/>bhd&nbsp;->&nbsp;1<br/>hwlo&nbsp;->&nbsp;1<br/>siz&nbsp;->&nbsp;1<br/>uxxe&nbsp;->&nbsp;1<br/>xct&nbsp;->&nbsp;1<br/>mbdia&nbsp;->&nbsp;1<br/>gq&nbsp;->&nbsp;1<br/>yvi&nbsp;->&nbsp;1<br/>ptu&nbsp;->&nbsp;1<br/>grun&nbsp;->&nbsp;1<br/>awk&nbsp;->&nbsp;1<br/>xv&nbsp;->&nbsp;1<br/>xw&nbsp;->&nbsp;1<br/>ho&nbsp;->&nbsp;1<br/>ya&nbsp;->&nbsp;1<br/>xdw&nbsp;->&nbsp;1<br/>hfxqy&nbsp;->&nbsp;1<br/>aocv&nbsp;->&nbsp;1<br/>dyox&nbsp;->&nbsp;1<br/>yk&nbsp;->&nbsp;1<br/>kzgar&nbsp;->&nbsp;1<br/>hmkl&nbsp;->&nbsp;1<br/>zegce&nbsp;->&nbsp;1<br/>fat&nbsp;->&nbsp;1<br/>kkx&nbsp;->&nbsp;1<br/>nnris&nbsp;->&nbsp;1<br/>if&nbsp;->&nbsp;1<br/>ldmh&nbsp;->&nbsp;1<br/>yxd&nbsp;->&nbsp;1<br/>jzw&nbsp;->&nbsp;1<br/>lni&nbsp;->&nbsp;1<br/>dceru&nbsp;->&nbsp;1<br/>zb&nbsp;->&nbsp;1<br/>wqfk&nbsp;->&nbsp;1<br/>zl&nbsp;->&nbsp;1<br/>txlzz&nbsp;->&nbsp;1<br/>odh&nbsp;->&nbsp;1<br/>gxsh&nbsp;->&nbsp;1<br/>zji&nbsp;->&nbsp;1<br/>zr&nbsp;->&nbsp;1<br/>mbvp&nbsp;->&nbsp;1<br/>honu&nbsp;->&nbsp;1<br/>zz&nbsp;->&nbsp;1<br/>vhuvb&nbsp;->&nbsp;1<br/>uklwc&nbsp;->&nbsp;1<br/>afdg&nbsp;->&nbsp;1<br/>xcjq&nbsp;->&nbsp;1<br/>fsw&nbsp;->&nbsp;1<br/>gody&nbsp;->&nbsp;1<br/>jpiqu&nbsp;->&nbsp;1<br/>onvcg&nbsp;->&nbsp;1<br/>mfqkx&nbsp;->&nbsp;1<br/>nctnz&nbsp;->&nbsp;1<br/>hxsl&nbsp;->&nbsp;1<br/>xjgu&nbsp;->&nbsp;1<br/>ajb&nbsp;->&nbsp;1<br/>iflw&nbsp;->&nbsp;1<br/>ftj&nbsp;->&nbsp;1<br/>jsfsk&nbsp;->&nbsp;1<br/>cnl&nbsp;->&nbsp;1<br/>km&nbsp;->&nbsp;1<br/>owks&nbsp;->&nbsp;1<br/>iuze&nbsp;->&nbsp;1<br/>kt&nbsp;->&nbsp;1<br/>phkk&nbsp;->&nbsp;1<br/>bsszg&nbsp;->&nbsp;1<br/>wbzr&nbsp;->&nbsp;1<br/>ryvo&nbsp;->&nbsp;1<br/>mekrv&nbsp;->&nbsp;1<br/>li&nbsp;->&nbsp;1<br/>akf&nbsp;->&nbsp;1<br/>htjyi&nbsp;->&nbsp;1<br/>lp&nbsp;->&nbsp;1<br/>lu&nbsp;->&nbsp;1<br/>ocvyw&nbsp;->&nbsp;1<br/>lw&nbsp;->&nbsp;1<br/>hommm&nbsp;->&nbsp;1<br/>lab&nbsp;->&nbsp;1<br/>xyo&nbsp;->&nbsp;1<br/>atbk&nbsp;->&nbsp;1<br/>md&nbsp;->&nbsp;1<br/>dqsqz&nbsp;->&nbsp;1<br/>mo&nbsp;->&nbsp;1<br/>npbp&nbsp;->&nbsp;1<br/>mp&nbsp;->&nbsp;1<br/>mr&nbsp;->&nbsp;1<br/>gknc&nbsp;->&nbsp;1<br/>oyat&nbsp;->&nbsp;1<br/>mz&nbsp;->&nbsp;1<br/>spi&nbsp;->&nbsp;1<br/>erxnl&nbsp;->&nbsp;1<br/>nb&nbsp;->&nbsp;1<br/>nfm&nbsp;->&nbsp;1<br/>dbr&nbsp;->&nbsp;1<br/>nm&nbsp;->&nbsp;1<br/>jwuho&nbsp;->&nbsp;1<br/>np&nbsp;->&nbsp;1<br/>xcmem&nbsp;->&nbsp;1<br/>ns&nbsp;->&nbsp;1<br/>nu&nbsp;->&nbsp;1<br/>gik&nbsp;->&nbsp;1<br/>jop&nbsp;->&nbsp;1<br/>jlmyr&nbsp;->&nbsp;1<br/>uici&nbsp;->&nbsp;1<br/>pkg&nbsp;->&nbsp;1<br/>oqvny&nbsp;->&nbsp;1<br/>lubrt&nbsp;->&nbsp;1<br/>ebmxq&nbsp;->&nbsp;1<br/>cau&nbsp;->&nbsp;1<br/>crjr&nbsp;->&nbsp;1<br/>fxme&nbsp;->&nbsp;1<br/>qmv&nbsp;->&nbsp;1<br/>om&nbsp;->&nbsp;1<br/>zprb&nbsp;->&nbsp;1<br/>cba&nbsp;->&nbsp;1<br/>ot&nbsp;->&nbsp;1<br/>nxn&nbsp;->&nbsp;1<br/>xky&nbsp;->&nbsp;1<br/>ow&nbsp;->&nbsp;1<br/>zzdu&nbsp;->&nbsp;1<br/>oz&nbsp;->&nbsp;1<br/>hlusi&nbsp;->&nbsp;1<br/>cpvh&nbsp;->&nbsp;1<br/>yjxr&nbsp;->&nbsp;1<br/>aoe&nbsp;->&nbsp;1<br/>ndhwo&nbsp;->&nbsp;1<br/>tdki&nbsp;->&nbsp;1<br/>pj&nbsp;->&nbsp;1<br/>jrtv&nbsp;->&nbsp;1<br/>csm&nbsp;->&nbsp;1<br/>Exception&nbsp;in&nbsp;thread&nbsp;"main"&nbsp;java.lang.NullPointerException:&nbsp;Cannot&nbsp;invoke&nbsp;"java.util.Map.keySet()"&nbsp;because&nbsp;"<local2>"&nbsp;is&nbsp;null<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;Test09.main(Test09.java:73)<br/><br/>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div style="height: 15px"></div>
<div style="font-size: 0.8em;">[ <a href="#top">&uparrow;</a> | <a href="#bottom">&downarrow;</a> | 
<a href="#summary">Povzetek</a> | 
<a href="#testcase1">Rezultati</a> ]</div><div style="height: 30px"></div>
        <a name="testcase10"></a>
        <div style="border: 1px solid #D8D87E">
            <table class="tableRuntime tableCommon" style="width: 100%; border: 3px solid #FF9;">
                <tbody>
                    <tr>
                        <td colspan="2" style="background-color: #FF9; color: black;">Testni primer 10</td>
                    </tr>
                    <tr>
                        <td style="width: 200px;">Vhod</td>
                        <td class="texttt">
                            <br/>
<span class="rwordb">import</span> java.util.*;<br/>
<br/>
<span class="rwordv">public</span> <span class="rwordv">class</span> Test10 {<br/>
<br/>
<tab><span class="rwordv">public</span> <span class="rwordv">static</span> <span class="rwordv">void</span> main(String[] args) {<br/>
<br/>
<tab><tab>Map<String, Set<String>> sinonimi = <span class="rwordb">new</span> HashMap<>();<br/>
<tab><tab>sinonimi.put(<span class="niz">"kuaf"</span>, Set.of(<span class="niz">"kuaf"</span>, <span class="niz">"znqe"</span>, <span class="niz">"qme"</span>, <span class="niz">"tucky"</span>, <span class="niz">"vwzh"</span>, <span class="niz">"vmbjw"</span>, <span class="niz">"lkk"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"znqe"</span>, Set.of(<span class="niz">"kuaf"</span>, <span class="niz">"znqe"</span>, <span class="niz">"qme"</span>, <span class="niz">"tucky"</span>, <span class="niz">"vwzh"</span>, <span class="niz">"vmbjw"</span>, <span class="niz">"lkk"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"qme"</span>, Set.of(<span class="niz">"kuaf"</span>, <span class="niz">"znqe"</span>, <span class="niz">"qme"</span>, <span class="niz">"tucky"</span>, <span class="niz">"vwzh"</span>, <span class="niz">"vmbjw"</span>, <span class="niz">"lkk"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"tucky"</span>, Set.of(<span class="niz">"kuaf"</span>, <span class="niz">"znqe"</span>, <span class="niz">"qme"</span>, <span class="niz">"tucky"</span>, <span class="niz">"vwzh"</span>, <span class="niz">"vmbjw"</span>, <span class="niz">"lkk"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"vwzh"</span>, Set.of(<span class="niz">"kuaf"</span>, <span class="niz">"znqe"</span>, <span class="niz">"qme"</span>, <span class="niz">"tucky"</span>, <span class="niz">"vwzh"</span>, <span class="niz">"vmbjw"</span>, <span class="niz">"lkk"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"vmbjw"</span>, Set.of(<span class="niz">"kuaf"</span>, <span class="niz">"znqe"</span>, <span class="niz">"qme"</span>, <span class="niz">"tucky"</span>, <span class="niz">"vwzh"</span>, <span class="niz">"vmbjw"</span>, <span class="niz">"lkk"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"lkk"</span>, Set.of(<span class="niz">"kuaf"</span>, <span class="niz">"znqe"</span>, <span class="niz">"qme"</span>, <span class="niz">"tucky"</span>, <span class="niz">"vwzh"</span>, <span class="niz">"vmbjw"</span>, <span class="niz">"lkk"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"gkb"</span>, Set.of(<span class="niz">"gkb"</span>, <span class="niz">"wy"</span>, <span class="niz">"pgos"</span>, <span class="niz">"ye"</span>, <span class="niz">"f"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"wy"</span>, Set.of(<span class="niz">"gkb"</span>, <span class="niz">"wy"</span>, <span class="niz">"pgos"</span>, <span class="niz">"ye"</span>, <span class="niz">"f"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"pgos"</span>, Set.of(<span class="niz">"gkb"</span>, <span class="niz">"wy"</span>, <span class="niz">"pgos"</span>, <span class="niz">"ye"</span>, <span class="niz">"f"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"ye"</span>, Set.of(<span class="niz">"gkb"</span>, <span class="niz">"wy"</span>, <span class="niz">"pgos"</span>, <span class="niz">"ye"</span>, <span class="niz">"f"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"f"</span>, Set.of(<span class="niz">"gkb"</span>, <span class="niz">"wy"</span>, <span class="niz">"pgos"</span>, <span class="niz">"ye"</span>, <span class="niz">"f"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"kf"</span>, Set.of(<span class="niz">"kf"</span>, <span class="niz">"yjx"</span>, <span class="niz">"cwuk"</span>, <span class="niz">"odqh"</span>, <span class="niz">"oprcm"</span>, <span class="niz">"gkhv"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"yjx"</span>, Set.of(<span class="niz">"kf"</span>, <span class="niz">"yjx"</span>, <span class="niz">"cwuk"</span>, <span class="niz">"odqh"</span>, <span class="niz">"oprcm"</span>, <span class="niz">"gkhv"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"cwuk"</span>, Set.of(<span class="niz">"kf"</span>, <span class="niz">"yjx"</span>, <span class="niz">"cwuk"</span>, <span class="niz">"odqh"</span>, <span class="niz">"oprcm"</span>, <span class="niz">"gkhv"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"odqh"</span>, Set.of(<span class="niz">"kf"</span>, <span class="niz">"yjx"</span>, <span class="niz">"cwuk"</span>, <span class="niz">"odqh"</span>, <span class="niz">"oprcm"</span>, <span class="niz">"gkhv"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"oprcm"</span>, Set.of(<span class="niz">"kf"</span>, <span class="niz">"yjx"</span>, <span class="niz">"cwuk"</span>, <span class="niz">"odqh"</span>, <span class="niz">"oprcm"</span>, <span class="niz">"gkhv"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"gkhv"</span>, Set.of(<span class="niz">"kf"</span>, <span class="niz">"yjx"</span>, <span class="niz">"cwuk"</span>, <span class="niz">"odqh"</span>, <span class="niz">"oprcm"</span>, <span class="niz">"gkhv"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"jk"</span>, Set.of(<span class="niz">"jk"</span>, <span class="niz">"iemp"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"iemp"</span>, Set.of(<span class="niz">"jk"</span>, <span class="niz">"iemp"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"ct"</span>, Set.of(<span class="niz">"ct"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"topj"</span>, Set.of(<span class="niz">"topj"</span>, <span class="niz">"ft"</span>, <span class="niz">"dlgu"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"ft"</span>, Set.of(<span class="niz">"topj"</span>, <span class="niz">"ft"</span>, <span class="niz">"dlgu"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"dlgu"</span>, Set.of(<span class="niz">"topj"</span>, <span class="niz">"ft"</span>, <span class="niz">"dlgu"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"aljx"</span>, Set.of(<span class="niz">"aljx"</span>, <span class="niz">"pdma"</span>, <span class="niz">"fgftg"</span>, <span class="niz">"qiqf"</span>, <span class="niz">"unp"</span>, <span class="niz">"kuafw"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"pdma"</span>, Set.of(<span class="niz">"aljx"</span>, <span class="niz">"pdma"</span>, <span class="niz">"fgftg"</span>, <span class="niz">"qiqf"</span>, <span class="niz">"unp"</span>, <span class="niz">"kuafw"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"fgftg"</span>, Set.of(<span class="niz">"aljx"</span>, <span class="niz">"pdma"</span>, <span class="niz">"fgftg"</span>, <span class="niz">"qiqf"</span>, <span class="niz">"unp"</span>, <span class="niz">"kuafw"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"qiqf"</span>, Set.of(<span class="niz">"aljx"</span>, <span class="niz">"pdma"</span>, <span class="niz">"fgftg"</span>, <span class="niz">"qiqf"</span>, <span class="niz">"unp"</span>, <span class="niz">"kuafw"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"unp"</span>, Set.of(<span class="niz">"aljx"</span>, <span class="niz">"pdma"</span>, <span class="niz">"fgftg"</span>, <span class="niz">"qiqf"</span>, <span class="niz">"unp"</span>, <span class="niz">"kuafw"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"kuafw"</span>, Set.of(<span class="niz">"aljx"</span>, <span class="niz">"pdma"</span>, <span class="niz">"fgftg"</span>, <span class="niz">"qiqf"</span>, <span class="niz">"unp"</span>, <span class="niz">"kuafw"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"arlcr"</span>, Set.of(<span class="niz">"arlcr"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"gsxm"</span>, Set.of(<span class="niz">"gsxm"</span>, <span class="niz">"fhm"</span>, <span class="niz">"edctb"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"fhm"</span>, Set.of(<span class="niz">"gsxm"</span>, <span class="niz">"fhm"</span>, <span class="niz">"edctb"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"edctb"</span>, Set.of(<span class="niz">"gsxm"</span>, <span class="niz">"fhm"</span>, <span class="niz">"edctb"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"ggp"</span>, Set.of(<span class="niz">"ggp"</span>, <span class="niz">"onmv"</span>, <span class="niz">"zuvae"</span>, <span class="niz">"ybl"</span>, <span class="niz">"aip"</span>, <span class="niz">"cdn"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"onmv"</span>, Set.of(<span class="niz">"ggp"</span>, <span class="niz">"onmv"</span>, <span class="niz">"zuvae"</span>, <span class="niz">"ybl"</span>, <span class="niz">"aip"</span>, <span class="niz">"cdn"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"zuvae"</span>, Set.of(<span class="niz">"ggp"</span>, <span class="niz">"onmv"</span>, <span class="niz">"zuvae"</span>, <span class="niz">"ybl"</span>, <span class="niz">"aip"</span>, <span class="niz">"cdn"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"ybl"</span>, Set.of(<span class="niz">"ggp"</span>, <span class="niz">"onmv"</span>, <span class="niz">"zuvae"</span>, <span class="niz">"ybl"</span>, <span class="niz">"aip"</span>, <span class="niz">"cdn"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"aip"</span>, Set.of(<span class="niz">"ggp"</span>, <span class="niz">"onmv"</span>, <span class="niz">"zuvae"</span>, <span class="niz">"ybl"</span>, <span class="niz">"aip"</span>, <span class="niz">"cdn"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"cdn"</span>, Set.of(<span class="niz">"ggp"</span>, <span class="niz">"onmv"</span>, <span class="niz">"zuvae"</span>, <span class="niz">"ybl"</span>, <span class="niz">"aip"</span>, <span class="niz">"cdn"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"df"</span>, Set.of(<span class="niz">"df"</span>, <span class="niz">"vv"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"vv"</span>, Set.of(<span class="niz">"df"</span>, <span class="niz">"vv"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"zhmkl"</span>, Set.of(<span class="niz">"zhmkl"</span>, <span class="niz">"typ"</span>, <span class="niz">"zp"</span>, <span class="niz">"plf"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"typ"</span>, Set.of(<span class="niz">"zhmkl"</span>, <span class="niz">"typ"</span>, <span class="niz">"zp"</span>, <span class="niz">"plf"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"zp"</span>, Set.of(<span class="niz">"zhmkl"</span>, <span class="niz">"typ"</span>, <span class="niz">"zp"</span>, <span class="niz">"plf"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"plf"</span>, Set.of(<span class="niz">"zhmkl"</span>, <span class="niz">"typ"</span>, <span class="niz">"zp"</span>, <span class="niz">"plf"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"ncln"</span>, Set.of(<span class="niz">"ncln"</span>, <span class="niz">"vfvd"</span>, <span class="niz">"zg"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"vfvd"</span>, Set.of(<span class="niz">"ncln"</span>, <span class="niz">"vfvd"</span>, <span class="niz">"zg"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"zg"</span>, Set.of(<span class="niz">"ncln"</span>, <span class="niz">"vfvd"</span>, <span class="niz">"zg"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"gig"</span>, Set.of(<span class="niz">"gig"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"xvib"</span>, Set.of(<span class="niz">"xvib"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"bsxmn"</span>, Set.of(<span class="niz">"bsxmn"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"tjzq"</span>, Set.of(<span class="niz">"tjzq"</span>, <span class="niz">"gvj"</span>, <span class="niz">"zjc"</span>, <span class="niz">"fblc"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"gvj"</span>, Set.of(<span class="niz">"tjzq"</span>, <span class="niz">"gvj"</span>, <span class="niz">"zjc"</span>, <span class="niz">"fblc"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"zjc"</span>, Set.of(<span class="niz">"tjzq"</span>, <span class="niz">"gvj"</span>, <span class="niz">"zjc"</span>, <span class="niz">"fblc"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"fblc"</span>, Set.of(<span class="niz">"tjzq"</span>, <span class="niz">"gvj"</span>, <span class="niz">"zjc"</span>, <span class="niz">"fblc"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"bozrc"</span>, Set.of(<span class="niz">"bozrc"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"bbfe"</span>, Set.of(<span class="niz">"bbfe"</span>, <span class="niz">"kjo"</span>, <span class="niz">"geovm"</span>, <span class="niz">"pbmdz"</span>, <span class="niz">"vcy"</span>, <span class="niz">"ixz"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"kjo"</span>, Set.of(<span class="niz">"bbfe"</span>, <span class="niz">"kjo"</span>, <span class="niz">"geovm"</span>, <span class="niz">"pbmdz"</span>, <span class="niz">"vcy"</span>, <span class="niz">"ixz"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"geovm"</span>, Set.of(<span class="niz">"bbfe"</span>, <span class="niz">"kjo"</span>, <span class="niz">"geovm"</span>, <span class="niz">"pbmdz"</span>, <span class="niz">"vcy"</span>, <span class="niz">"ixz"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"pbmdz"</span>, Set.of(<span class="niz">"bbfe"</span>, <span class="niz">"kjo"</span>, <span class="niz">"geovm"</span>, <span class="niz">"pbmdz"</span>, <span class="niz">"vcy"</span>, <span class="niz">"ixz"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"vcy"</span>, Set.of(<span class="niz">"bbfe"</span>, <span class="niz">"kjo"</span>, <span class="niz">"geovm"</span>, <span class="niz">"pbmdz"</span>, <span class="niz">"vcy"</span>, <span class="niz">"ixz"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"ixz"</span>, Set.of(<span class="niz">"bbfe"</span>, <span class="niz">"kjo"</span>, <span class="niz">"geovm"</span>, <span class="niz">"pbmdz"</span>, <span class="niz">"vcy"</span>, <span class="niz">"ixz"</span>));<br/>
<tab><tab>sinonimi.put(<span class="niz">"za"</span>, Set.of(<span class="niz">"za"</span>));<br/>
<br/>
<tab><tab>Map<Set<String>, Integer> slovar = Cetrta.pogostost(<span class="niz">"gnfg vfvd a mxxgl uhi irl ncln impk gkhv vmbjw rvg uud ecfd iemp lmh rj aip yph irl nyl vcy evagv aofhx j ojlq bozrc gnfg vnpfr rsqf gu xbna rx oxafn ecfd hfx jxo dn waq xm oxruc bc jnq uyb gkhv kuaf vb lcswf vb n vbzvb cssy kgan uypm tucky cpjd fdtcz hieo xz hxfxl uypm qcp dnm uypm h lnxuc qru lxur wvuq kuaf yph p hnwd gxgx esd wumo o p bow gpru szx e sv dgd vfvd wxqrw xq fl jgxam jbmn gpru wsh kpbl gig iybmt typ dy grs yci dsb spf vz ja pgos aljx gpglm rx ioy jq lnxuc ecfd xr khssm sv dync lyujw brqju amjp wxjnh wiqm dvav fazn yzv ekv topj vwzh amlb ahh zppm sg zy hud waw edctb iaxgi rsqf frwzt oe ypbf egkcl impk evagv bl topj vnpfr okjlh h oug fotes bozrc tndf kuafw lyrtt ysta gsxm kpbl fmg onmv wxqrw upmu dapw esd edctb mu wzv iaxgi izgql b tjzq tucky brqju a fs snx ybl ilom nl za okw qru ncw kpbl oxym bl dgd jzua ahh sg zp qiw qi gh z hd no bnwjn xs uhi ye ja myr myr dnm h tndf qw zjc iisv jq fw ct bl nyl cssy ov grs akgq iur ecb zhlnw cqxr vsrdn ko oxym gxgx ioy phq paps bbfe kuaf spf wy kpbl oug ncw hxfxl achy xcdf aofhx gkb wxwbg zx ekv cmxk gkb qme dldkh pt y aljx xxh ugfol cisid hvxio bbfe gpsi jfl fazn xhucm vz bm ko zz ai xbna qiqf cusy zuvae frwzt dvav v nidm wbip lxur p okjlh dhwl onmv fxp razit c dnm hxfxl ekv a zik x xqvj ft uey a pt qi bpd paps gig dlgu fw fx oug brqju csjkp okw qw oubzr ybl kqws vmbjw mv qx xz zzz wxqrw ny zz oxop gugu yci anrw lxur jnq bl acurz jxo toy cgfy r sw vbzvb ilom izgql ouuk fe gig qua bnldj mub ekls wklv impk cisid fnbo gf h rdpd gu rafk jxrz q kpbl komhv ja uypm jnq yci yci obum lnuj kuafw oprcm typ esd dvclw vz iur okjlh wxjnh txh dsb tndf xs hieo komhv iaxgi aljx zjc yopm gprb ouuk xyda ybl iaxgi cdn zp ixz p<span class="rwordv">do</span> zbxrn jwpyg komhv achy cpjd iaxgi ecfd jo vz o yph bc lx xq lnxuc jtbq khssm fgftg grs fnbo yzv xfiq zzz xvib cbwbk fe ysta sdx bbs ekr ryu bdxa yq x<span class="rwordv">do</span> szx dhwl dvclw lnuj fw bbs yul cdn vw a frwzt vnpfr oubzr aic lmh vz uey oubzr qwnwm fnbo gkb topj gnfg iisv amjp zhlnw csjkp kuaf doh xs ecruj qx k ugfol bbfe ugfol anrw fmg iisv ojlq ecruj kuafw lmy lyujw ugfol jq muqq gsxm qiw lx d glnbf"</span>, sinonimi);<br/>
<tab><tab>List<String> seznam = <span class="rwordb">new</span> ArrayList<>();<br/>
<tab><tab><span class="rwordb">for</span> (Set<String> mnozica: slovar.keySet()) {<br/>
<tab><tab><tab>List<String> lstMnozica = <span class="rwordb">new</span> ArrayList<>(mnozica);<br/>
<tab><tab><tab>lstMnozica.sort(null);<br/>
<tab><tab><tab>seznam.add(String.format(<span class="niz">"%s -> %d"</span>, lstMnozica, slovar.get(mnozica)));<br/>
<tab><tab>}<br/>
<tab><tab>seznam.sort(null);<br/>
<tab><tab><span class="rwordb">for</span> (String s: seznam) {<br/>
<tab><tab><tab>System.out.println(s);<br/>
<tab><tab>}<br/>
<tab>}<br/>
}<br/>


<br/>
                        </td>
                    </tr>
                    <tr>
                        <td>Izhod programa</td>
                        <td class="texttt">
                            [gnfg]<br/>nyl&nbsp;->&nbsp;1<br/>pt&nbsp;->&nbsp;1<br/>ioy&nbsp;->&nbsp;1<br/>qi&nbsp;->&nbsp;1<br/>qiqf&nbsp;->&nbsp;1<br/>cgfy&nbsp;->&nbsp;1<br/>okw&nbsp;->&nbsp;1<br/>tjzq&nbsp;->&nbsp;1<br/>hvxio&nbsp;->&nbsp;1<br/>rsqf&nbsp;->&nbsp;1<br/>jxrz&nbsp;->&nbsp;1<br/>xbna&nbsp;->&nbsp;1<br/>qw&nbsp;->&nbsp;1<br/>qx&nbsp;->&nbsp;1<br/>ai&nbsp;->&nbsp;1<br/>vsrdn&nbsp;->&nbsp;1<br/>cdn&nbsp;->&nbsp;1<br/>impk&nbsp;->&nbsp;1<br/>pgos&nbsp;->&nbsp;1<br/>yph&nbsp;->&nbsp;1<br/>bbs&nbsp;->&nbsp;1<br/>oxafn&nbsp;->&nbsp;1<br/>uhi&nbsp;->&nbsp;1<br/>rj&nbsp;->&nbsp;1<br/>uyb&nbsp;->&nbsp;1<br/>dgd&nbsp;->&nbsp;1<br/>komhv&nbsp;->&nbsp;1<br/>bc&nbsp;->&nbsp;1<br/>jgxam&nbsp;->&nbsp;1<br/>okjlh&nbsp;->&nbsp;1<br/>rx&nbsp;->&nbsp;1<br/>sdx&nbsp;->&nbsp;1<br/>myr&nbsp;->&nbsp;1<br/>cpjd&nbsp;->&nbsp;1<br/>bl&nbsp;->&nbsp;1<br/>tndf&nbsp;->&nbsp;1<br/>bm&nbsp;->&nbsp;1<br/>ugfol&nbsp;->&nbsp;1<br/>sg&nbsp;->&nbsp;1<br/>iybmt&nbsp;->&nbsp;1<br/>wiqm&nbsp;->&nbsp;1<br/>kpbl&nbsp;->&nbsp;1<br/>amjp&nbsp;->&nbsp;1<br/>a&nbsp;->&nbsp;1<br/>lnxuc&nbsp;->&nbsp;1<br/>irl&nbsp;->&nbsp;1<br/>b&nbsp;->&nbsp;1<br/>hnwd&nbsp;->&nbsp;1<br/>sv&nbsp;->&nbsp;1<br/>xhucm&nbsp;->&nbsp;1<br/>c&nbsp;->&nbsp;1<br/>sw&nbsp;->&nbsp;1<br/>d&nbsp;->&nbsp;1<br/>e&nbsp;->&nbsp;1<br/>txh&nbsp;->&nbsp;1<br/>h&nbsp;->&nbsp;1<br/>dvav&nbsp;->&nbsp;1<br/>tucky&nbsp;->&nbsp;1<br/>zbxrn&nbsp;->&nbsp;1<br/>j&nbsp;->&nbsp;1<br/>k&nbsp;->&nbsp;1<br/>gugu&nbsp;->&nbsp;1<br/>n&nbsp;->&nbsp;1<br/>o&nbsp;->&nbsp;1<br/>p&nbsp;->&nbsp;1<br/>ilom&nbsp;->&nbsp;1<br/>ct&nbsp;->&nbsp;1<br/>q&nbsp;->&nbsp;1<br/>r&nbsp;->&nbsp;1<br/>qru&nbsp;->&nbsp;1<br/>cusy&nbsp;->&nbsp;1<br/>v&nbsp;->&nbsp;1<br/>dhwl&nbsp;->&nbsp;1<br/>frwzt&nbsp;->&nbsp;1<br/>x&nbsp;->&nbsp;1<br/>y&nbsp;->&nbsp;1<br/>z&nbsp;->&nbsp;1<br/>fmg&nbsp;->&nbsp;1<br/>aofhx&nbsp;->&nbsp;1<br/>ybl&nbsp;->&nbsp;1<br/>ekls&nbsp;->&nbsp;1<br/>bdxa&nbsp;->&nbsp;1<br/>oxym&nbsp;->&nbsp;1<br/>dn&nbsp;->&nbsp;1<br/>typ&nbsp;->&nbsp;1<br/>dldkh&nbsp;->&nbsp;1<br/>oprcm&nbsp;->&nbsp;1<br/>ekr&nbsp;->&nbsp;1<br/>amlb&nbsp;->&nbsp;1<br/>ekv&nbsp;->&nbsp;1<br/>ojlq&nbsp;->&nbsp;1<br/>aljx&nbsp;->&nbsp;1<br/>dy&nbsp;->&nbsp;1<br/>xcdf&nbsp;->&nbsp;1<br/>ecruj&nbsp;->&nbsp;1<br/>yci&nbsp;->&nbsp;1<br/>achy&nbsp;->&nbsp;1<br/>qcp&nbsp;->&nbsp;1<br/>rvg&nbsp;->&nbsp;1<br/>vb&nbsp;->&nbsp;1<br/>edctb&nbsp;->&nbsp;1<br/>xfiq&nbsp;->&nbsp;1<br/>xvib&nbsp;->&nbsp;1<br/>jfl&nbsp;->&nbsp;1<br/>brqju&nbsp;->&nbsp;1<br/>iaxgi&nbsp;->&nbsp;1<br/>akgq&nbsp;->&nbsp;1<br/>kgan&nbsp;->&nbsp;1<br/>qua&nbsp;->&nbsp;1<br/>wxwbg&nbsp;->&nbsp;1<br/>fe&nbsp;->&nbsp;1<br/>vw&nbsp;->&nbsp;1<br/>gkhv&nbsp;->&nbsp;1<br/>vz&nbsp;->&nbsp;1<br/>fl&nbsp;->&nbsp;1<br/>iur&nbsp;->&nbsp;1<br/>ouuk&nbsp;->&nbsp;1<br/>fs&nbsp;->&nbsp;1<br/>ft&nbsp;->&nbsp;1<br/>gpsi&nbsp;->&nbsp;1<br/>gsxm&nbsp;->&nbsp;1<br/>fw&nbsp;->&nbsp;1<br/>bbfe&nbsp;->&nbsp;1<br/>yul&nbsp;->&nbsp;1<br/>fx&nbsp;->&nbsp;1<br/>vbzvb&nbsp;->&nbsp;1<br/>gpru&nbsp;->&nbsp;1<br/>gf&nbsp;->&nbsp;1<br/>jxo&nbsp;->&nbsp;1<br/>gh&nbsp;->&nbsp;1<br/>wy&nbsp;->&nbsp;1<br/>razit&nbsp;->&nbsp;1<br/>dvclw&nbsp;->&nbsp;1<br/>waq&nbsp;->&nbsp;1<br/>jbmn&nbsp;->&nbsp;1<br/>grs&nbsp;->&nbsp;1<br/>gprb&nbsp;->&nbsp;1<br/>waw&nbsp;->&nbsp;1<br/>gu&nbsp;->&nbsp;1<br/>szx&nbsp;->&nbsp;1<br/>kqws&nbsp;->&nbsp;1<br/>cmxk&nbsp;->&nbsp;1<br/>xm&nbsp;->&nbsp;1<br/>hud&nbsp;->&nbsp;1<br/>cssy&nbsp;->&nbsp;1<br/>xq&nbsp;->&nbsp;1<br/>xr&nbsp;->&nbsp;1<br/>pdo&nbsp;->&nbsp;1<br/>xs&nbsp;->&nbsp;1<br/>hd&nbsp;->&nbsp;1<br/>fazn&nbsp;->&nbsp;1<br/>rafk&nbsp;->&nbsp;1<br/>xz&nbsp;->&nbsp;1<br/>xdo&nbsp;->&nbsp;1<br/>wbip&nbsp;->&nbsp;1<br/>lmh&nbsp;->&nbsp;1<br/>xyda&nbsp;->&nbsp;1<br/>ye&nbsp;->&nbsp;1<br/>cisid&nbsp;->&nbsp;1<br/>wsh&nbsp;->&nbsp;1<br/>ryu&nbsp;->&nbsp;1<br/>zuvae&nbsp;->&nbsp;1<br/>yq&nbsp;->&nbsp;1<br/>lmy&nbsp;->&nbsp;1<br/>lxur&nbsp;->&nbsp;1<br/>jwpyg&nbsp;->&nbsp;1<br/>zik&nbsp;->&nbsp;1<br/>anrw&nbsp;->&nbsp;1<br/>ahh&nbsp;->&nbsp;1<br/>dnm&nbsp;->&nbsp;1<br/>dync&nbsp;->&nbsp;1<br/>fnbo&nbsp;->&nbsp;1<br/>oubzr&nbsp;->&nbsp;1<br/>bozrc&nbsp;->&nbsp;1<br/>za&nbsp;->&nbsp;1<br/>jtbq&nbsp;->&nbsp;1<br/>ixz&nbsp;->&nbsp;1<br/>wxqrw&nbsp;->&nbsp;1<br/>zjc&nbsp;->&nbsp;1<br/>fgftg&nbsp;->&nbsp;1<br/>vnpfr&nbsp;->&nbsp;1<br/>zp&nbsp;->&nbsp;1<br/>wumo&nbsp;->&nbsp;1<br/>ja&nbsp;->&nbsp;1<br/>aic&nbsp;->&nbsp;1<br/>hfx&nbsp;->&nbsp;1<br/>hxfxl&nbsp;->&nbsp;1<br/>zzz&nbsp;->&nbsp;1<br/>doh&nbsp;->&nbsp;1<br/>kuaf&nbsp;->&nbsp;1<br/>zx&nbsp;->&nbsp;1<br/>zy&nbsp;->&nbsp;1<br/>ysta&nbsp;->&nbsp;1<br/>gpglm&nbsp;->&nbsp;1<br/>oug&nbsp;->&nbsp;1<br/>zz&nbsp;->&nbsp;1<br/>jo&nbsp;->&nbsp;1<br/>jq&nbsp;->&nbsp;1<br/>aip&nbsp;->&nbsp;1<br/>kuafw&nbsp;->&nbsp;1<br/>xqvj&nbsp;->&nbsp;1<br/>dlgu&nbsp;->&nbsp;1<br/>hieo&nbsp;->&nbsp;1<br/>qiw&nbsp;->&nbsp;1<br/>toy&nbsp;->&nbsp;1<br/>ncw&nbsp;->&nbsp;1<br/>ko&nbsp;->&nbsp;1<br/>fotes&nbsp;->&nbsp;1<br/>vfvd&nbsp;->&nbsp;1<br/>xxh&nbsp;->&nbsp;1<br/>wklv&nbsp;->&nbsp;1<br/>dapw&nbsp;->&nbsp;1<br/>vcy&nbsp;->&nbsp;1<br/>yzv&nbsp;->&nbsp;1<br/>esd&nbsp;->&nbsp;1<br/>csjkp&nbsp;->&nbsp;1<br/>phq&nbsp;->&nbsp;1<br/>evagv&nbsp;->&nbsp;1<br/>snx&nbsp;->&nbsp;1<br/>paps&nbsp;->&nbsp;1<br/>topj&nbsp;->&nbsp;1<br/>khssm&nbsp;->&nbsp;1<br/>ecb&nbsp;->&nbsp;1<br/>zppm&nbsp;->&nbsp;1<br/>lcswf&nbsp;->&nbsp;1<br/>wvuq&nbsp;->&nbsp;1<br/>lx&nbsp;->&nbsp;1<br/>egkcl&nbsp;->&nbsp;1<br/>iemp&nbsp;->&nbsp;1<br/>gxgx&nbsp;->&nbsp;1<br/>rdpd&nbsp;->&nbsp;1<br/>uypm&nbsp;->&nbsp;1<br/>vwzh&nbsp;->&nbsp;1<br/>obum&nbsp;->&nbsp;1<br/>acurz&nbsp;->&nbsp;1<br/>fdtcz&nbsp;->&nbsp;1<br/>oxruc&nbsp;->&nbsp;1<br/>ypbf&nbsp;->&nbsp;1<br/>lnuj&nbsp;->&nbsp;1<br/>spf&nbsp;->&nbsp;1<br/>mu&nbsp;->&nbsp;1<br/>vmbjw&nbsp;->&nbsp;1<br/>mv&nbsp;->&nbsp;1<br/>yopm&nbsp;->&nbsp;1<br/>jnq&nbsp;->&nbsp;1<br/>qwnwm&nbsp;->&nbsp;1<br/>zhlnw&nbsp;->&nbsp;1<br/>dsb&nbsp;->&nbsp;1<br/>iisv&nbsp;->&nbsp;1<br/>upmu&nbsp;->&nbsp;1<br/>bnwjn&nbsp;->&nbsp;1<br/>nidm&nbsp;->&nbsp;1<br/>mub&nbsp;->&nbsp;1<br/>nl&nbsp;->&nbsp;1<br/>oxop&nbsp;->&nbsp;1<br/>bnldj&nbsp;->&nbsp;1<br/>no&nbsp;->&nbsp;1<br/>ncln&nbsp;->&nbsp;1<br/>gig&nbsp;->&nbsp;1<br/>uud&nbsp;->&nbsp;1<br/>cqxr&nbsp;->&nbsp;1<br/>qme&nbsp;->&nbsp;1<br/>bow&nbsp;->&nbsp;1<br/>ny&nbsp;->&nbsp;1<br/>oe&nbsp;->&nbsp;1<br/>bpd&nbsp;->&nbsp;1<br/>gnfg&nbsp;->&nbsp;1<br/>fxp&nbsp;->&nbsp;1<br/>cbwbk&nbsp;->&nbsp;1<br/>wxjnh&nbsp;->&nbsp;1<br/>ov&nbsp;->&nbsp;1<br/>uey&nbsp;->&nbsp;1<br/>mxxgl&nbsp;->&nbsp;1<br/>jzua&nbsp;->&nbsp;1<br/>lyrtt&nbsp;->&nbsp;1<br/>izgql&nbsp;->&nbsp;1<br/>wzv&nbsp;->&nbsp;1<br/>ecfd&nbsp;->&nbsp;1<br/>glnbf&nbsp;->&nbsp;1<br/>muqq&nbsp;->&nbsp;1<br/>onmv&nbsp;->&nbsp;1<br/>lyujw&nbsp;->&nbsp;1<br/>gkb&nbsp;->&nbsp;1<br/>Exception&nbsp;in&nbsp;thread&nbsp;"main"&nbsp;java.lang.NullPointerException:&nbsp;Cannot&nbsp;invoke&nbsp;"java.util.Map.keySet()"&nbsp;because&nbsp;"<local2>"&nbsp;is&nbsp;null<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;Test10.main(Test10.java:76)<br/><br/>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div style="height: 15px"></div>
<div style="font-size: 0.8em;">[ <a href="#top">&uparrow;</a> | <a href="#bottom">&downarrow;</a> | 
<a href="#summary">Povzetek</a> | 
<a href="#testcase1">Rezultati</a> ]</div><div style="height: 30px"></div>

        <div style="height: 30px"></div>

        <table id="grad1" class="tableLegend tableSummary"
          <tbody>
            <tr>
              <td style="color: black;">
              <table class="tableLegend">
                <tr>
	              <td style="background-color: #9F9; color: black; width: 10px; text-align: center; border: 1px solid black; padding: 2px;"></td>
	              <td style="font-size: 0.7em; padding: 3px;">ok</td>
                </tr>
              </table>
              </td>
              <td style="color: black;">
              <table class="tableLegend">
                <tr>
	              <td style="background-color: #FFBF00; color: black; width: 10px; text-align: center; border: 1px solid black; padding: 2px;"></td>
	              <td style="font-size: 0.7em; padding: 3px;">napaka</td>
                </tr>
              </table>
              </td>
              <td style="color: black;">
              <table class="tableLegend">
                <tr>
	              <td style="background-color: #FF9; color: black; width: 10px; text-align: center; border: 1px solid black; padding: 2px;"></td>
	              <td style="font-size: 0.7em; padding: 3px;">napaka med izvajanjem</td>
                </tr>
              </table>
              </td>
              <td style="color: black;">
              <table class="tableLegend">
                <tr>
	              <td style="background-color: #C00000; color: black; width: 10px; text-align: center; border: 1px solid black; padding: 2px;"></td>
	              <td style="font-size: 0.7em; padding: 3px;">se ne prevede</td>
                </tr>
              </table>
              </td>
              <td style="color: black;">
              <table class="tableLegend">
                <tr>
	              <td style="background-color: #B9F; color: black; width: 10px; text-align: center; border: 1px solid black; padding: 2px;"></td>
	              <td style="font-size: 0.7em; padding: 3px;">timeout (1000 ms)</td>
                </tr>
              </table>
              </td>
              <td style="color: black;">
              <table class="tableLegend">
                <tr>
	              <td style="background-color: #D0E0F0; color: black; width: 10px; text-align: center; border: 1px solid black; padding: 2px;"></td>
	              <td style="font-size: 0.7em; padding: 3px;">rezultat izrisa</td>
                </tr>
              </table>
              </td>
            </tr>
          </tbody>
        </table>
        <a name="bottom"></a>
        </div>
    </body>
    <!-- java class tester version "1.5.12" -->
    <!-- 31.1.2024 8:31.42 -->
    <!-- ASUS_E2, fe80::394f:811b:9a75:b34e%8 -->
</html>
